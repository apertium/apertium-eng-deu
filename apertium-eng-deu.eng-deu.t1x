<?xml version="1.0" encoding="UTF-8"?> <!-- -*- nxml -*- -->
<transfer default="chunk">

	<section-def-cats>
		<def-cat n="nom">
			<cat-item tags="n"/>
			<cat-item tags="n.*"/>
			<cat-item tags="np"/>
			<cat-item tags="np.*"/>
		</def-cat>
		<def-cat n="noun">
			<cat-item tags="n.*"/>
			<cat-item tags="np.*"/>
		</def-cat>
		<def-cat n="nouns">
			<cat-item lemma="prpers" tags="prn.*"/>
			<cat-item tags="n.*"/>
			<cat-item tags="np.*"/>
		</def-cat>
		<def-cat n="gen_nom">
			<cat-item tags="n.gen"/>
			<cat-item tags="n.*.gen"/>
		</def-cat>
		<def-cat n="gen_n">
			<cat-item lemma="'s" tags="gen"/>
		</def-cat>
		<def-cat n="cog_np">
			<cat-item tags="np.cog"/>
			<cat-item tags="np.cog.*"/>
		</def-cat>
		<def-cat n="names">
			<cat-item tags="np.cog"/>
			<cat-item tags="np.cog.*"/>
			<cat-item tags="np.ant"/>
			<cat-item tags="np.ant.*"/>
			<cat-item tags="np.org"/>
			<cat-item tags="np.org.*"/>
			<cat-item tags="np.al.*"/>
		</def-cat>
		<def-cat n="cog_names"> <!-- after Mr/Ms -->
			<cat-item tags="np.cog"/>
			<cat-item tags="np.cog.*"/>
			<cat-item tags="np.ant"/>
			<cat-item tags="np.ant.*"/>
		</def-cat>
		<def-cat n="location">
			<cat-item tags="np.loc.*"/>
			<cat-item tags="np.top.*"/>
		</def-cat>
		<def-cat n="det">
			<cat-item tags="det.ind.*"/>
			<cat-item tags="det.def.*"/>
			<cat-item tags="det.qnt.*"/>
			<cat-item tags="det.dem.*"/>
			<cat-item tags="det.pos.*"/>
		</def-cat>
		<def-cat n="dets">
			<cat-item tags="det.ind.*"/>
			<cat-item tags="det.def.*"/>
			<cat-item tags="det.pos.*"/>
			<cat-item tags="det.qnt.*"/>
			<cat-item tags="det.dem.*"/>
			<cat-item tags="prn.dem.*"/>
		</def-cat>
		<def-cat n="ind_det_a">
			<cat-item lemma="a" tags="det.ind.*"/>
		</def-cat>
		<def-cat n="ind_det">
			<cat-item tags="det.ind.*"/>
		</def-cat>
		<def-cat n="def_det">
			<cat-item tags="det.def.*"/>
		</def-cat>
		<def-cat n="adj">
			<cat-item tags="adj"/>
			<cat-item tags="adj.*"/>
		</def-cat>
		<def-cat n="pp_adj">
			<cat-item tags="adj"/>
			<cat-item tags="adj.*"/>
			<cat-item tags="vblex.pp"/>  <!-- if bad PoS tagging -->
		</def-cat>
		<def-cat n="num">
			<cat-item tags="num"/>
			<cat-item tags="num.*"/>
		</def-cat>
		<def-cat n="ord_num">
			<cat-item tags="num.ord"/>
			<cat-item tags="adj.ord"/>
		</def-cat>
		<def-cat n="adv">
			<cat-item tags="adv"/>
			<cat-item tags="adv.*"/>
			<cat-item tags="preadv"/>
			<cat-item tags="preadv.*"/>
		</def-cat>
		<def-cat n="adv1">
			<cat-item tags="adv"/>
			<cat-item tags="preadv"/>
		</def-cat>
		<def-cat n="adv2">
			<cat-item tags="adv"/>
			<cat-item tags="adv.*"/>
			<cat-item tags="preadv"/>
			<cat-item tags="preadv.*"/>
			<cat-item tags="cnjadv"/>
		</def-cat>
		<def-cat n="itg">
			<cat-item tags="prn.itg"/>
			<cat-item tags="prn.itg.*"/>
			<cat-item tags="adv.itg"/>
			<cat-item tags="adv.itg.*"/>
		</def-cat>
		<def-cat n="prn"> <!-- others than prpers/itg -->
			<cat-item tags="prn.dem.*"/>
			<cat-item tags="prn.ind.*"/>
			<cat-item tags="prn.pers.*"/>
			<cat-item tags="prn.qnt.*"/>
			<cat-item tags="prn.tn.*"/>
		</def-cat>
		<def-cat n="rel_prn">
			<cat-item tags="prn.rel.*"/>
		</def-cat>
		<def-cat n="prpers">
			<cat-item lemma="prpers" tags="prn.*"/>
			<cat-item tags="prn.pos.*"/>
		</def-cat>
		<def-cat n="prpers_pers">
			<cat-item lemma="prpers" tags="prn.subj.*"/>
			<cat-item tags="prn.pers.*"/>
		</def-cat>
		<def-cat n="prpers_subj">
			<cat-item lemma="prpers" tags="prn.subj.*"/>
		</def-cat>
		<def-cat n="prpos">
			<cat-item lemma="prpers" tags="prn.pos.*"/>
		</def-cat>
		<def-cat n="prpers_det">
			<cat-item lemma="prpers" tags="prn.det"/>
			<cat-item lemma="prpers" tags="prn.det.*"/>
			<cat-item lemma="prpers" tags="prn.pos.*"/>
		</def-cat>
		<def-cat n="any_det">  <!-- except det.itg -->
			<cat-item tags="det.def.*"/>
			<cat-item tags="det.ind.*"/>
			<cat-item tags="det.qnt.*"/>
			<cat-item tags="det.dem.*"/>
			<cat-item tags="det.pos.*"/>
			<cat-item tags="det.ord.*"/>
			<cat-item tags="prn.det"/>
			<cat-item tags="prn.det.*"/>
			<cat-item tags="prn.pos.*"/>
		</def-cat>
		<def-cat n="verbs"> <!-- any verb -->
			<cat-item tags="vblex"/>
			<cat-item tags="vblex.*"/>
			<cat-item tags="vbser.*"/>
			<cat-item tags="vbhaver.*"/>
			<cat-item tags="vbdo.*"/>
			<cat-item tags="vbmod.*"/>
			<cat-item tags="vaux.*"/>
		</def-cat>
		<def-cat n="verbnmh"> <!-- any verb but modal or "have" -->
			<cat-item tags="vblex"/>
			<cat-item tags="vblex.*"/>
			<cat-item tags="vbser.*"/>
			<cat-item tags="vbdo.*"/>
		</def-cat>
		<def-cat n="verbnm"> <!-- verb no modal -->
			<cat-item tags="vblex.*"/>
			<cat-item tags="vbser.*"/>
			<cat-item tags="vbhaver.*"/>
			<cat-item tags="vbdo.*"/>
			<cat-item lemma="do" tags="vaux.*"/>
		</def-cat>
		<def-cat n="verbm"> <!-- modal verb -->
			<cat-item tags="vbmod.*"/>
			<cat-item tags="vaux.*"/>
		</def-cat>
		<def-cat n="verb-mod"> <!-- modal verb -->
			<cat-item tags="vbmod.*"/>
		</def-cat>
		<def-cat n="verbaux">
			<cat-item tags="vbmod.*"/>
			<cat-item tags="vaux.*"/>
			<cat-item tags="vbdo.*"/>
			<cat-item tags="vbhaver.*"/>
			<cat-item tags="vbser.*"/>
		</def-cat>
		<def-cat n="verbdo">
			<cat-item tags="vbdo.*"/>
			<cat-item lemma="do" tags="vaux.*"/>
		</def-cat>
		<def-cat n="verbhave">
			<cat-item tags="vbhaver.*"/>
			<cat-item lemma="have" tags="vblex.*"/>
			<cat-item lemma="have got" tags="vblex.*"/>
		</def-cat>
		<def-cat n="verbbe">
			<cat-item tags="vbser.*"/>
		</def-cat>
		<def-cat n="verblex"> <!-- main verb -->
			<cat-item tags="vblex"/>
			<cat-item tags="vblex.*"/>
			<cat-item tags="vbdo.*"/> <!--(vbdo has no single rule)-->
		</def-cat>
		<!--<def-cat n="verbsep">
			<cat-item tags="vblex.sep"/>
			<cat-item tags="vblex.sep.*"/>
		</def-cat>-->
		<def-cat n="prep"> <!-- preposition -->
			<cat-item tags="pr"/>
			<cat-item tags="pr.*"/>
			<cat-item tags="pprep.*"/>
		</def-cat>
		<def-cat n="gen_prep">  <!-- German: genitive -->
			<cat-item lemma="outside" tags="pr"/>
		</def-cat>
		<def-cat n="dat_prep">  <!-- German: dative -->
			<cat-item lemma="at" tags="pr"/>
			<cat-item lemma="after" tags="pr"/>
			<cat-item lemma="behind" tags="pr"/>
			<cat-item lemma="between" tags="pr"/>
			<cat-item lemma="by" tags="pr"/>
			<cat-item lemma="from" tags="pr"/>
			<cat-item lemma="in" tags="pr"/>
			<cat-item lemma="in front of" tags="pr"/>
			<cat-item lemma="near" tags="pr"/>
			<cat-item lemma="next to" tags="pr"/>
			<cat-item lemma="of" tags="pr"/>
			<cat-item lemma="out of" tags="pr"/>
			<cat-item lemma="on" tags="pr"/>
			<cat-item lemma="to" tags="pr"/>
			<cat-item lemma="under" tags="pr"/>
			<cat-item lemma="with" tags="pr"/>
		</def-cat>
		<def-cat n="acc_prep">  <!-- German: accusative -->
			<cat-item lemma="against" tags="pr"/>
			<cat-item lemma="for" tags="pr"/>
			<cat-item lemma="into" tags="pr"/>
		</def-cat>
		<def-cat n="conj">
			<cat-item tags="cnjcoo"/>
			<cat-item tags="cnjcoo.*"/>
			<cat-item tags="cnjsub"/>
			<cat-item tags="cnjsub.*"/>
		</def-cat>
		<def-cat n="cnjcoo">
			<cat-item tags="cnjcoo"/>
		</def-cat>
		<def-cat n="ij">
			<cat-item tags="ij"/>
		</def-cat>
		<def-cat n="hyphen">
			<cat-item tags="guio"/>
		</def-cat>
		<def-cat n="coma">
			<cat-item tags="cm"/>
		</def-cat>
		<def-cat n="sent">
			<cat-item tags="sent"/>
		</def-cat>

		<def-cat n="and">
			<cat-item lemma="and" tags="cnjcoo"/>
		</def-cat>
		<def-cat n="go">
			<cat-item lemma="go" tags="vblex.*"/>
		</def-cat>
		<def-cat n="play">
			<cat-item lemma="play" tags="vblex.*"/>
		</def-cat>
		<def-cat n="to">
			<cat-item lemma="to" tags="pr"/>
			<cat-item lemma="to" tags="pr.*"/>
		</def-cat>
		<def-cat n="too">
			<cat-item lemma="too" tags="adv"/>
			<cat-item lemma="too" tags="adv.*"/>
		</def-cat>
		<def-cat n="a">
			<cat-item lemma="a" tags="det"/>
			<cat-item lemma="a" tags="det.*"/>
		</def-cat>
		<def-cat n="on">
			<cat-item lemma="on" tags="pr"/>
			<cat-item lemma="on" tags="adv"/>
		</def-cat>
		<def-cat n="of">
			<cat-item lemma="of" tags="pr"/>
		</def-cat>
		<def-cat n="got">
			<cat-item lemma="get" tags="vblex.*"/>
		</def-cat>
		<def-cat n="not">
			<cat-item lemma="not" tags="adv"/>
		</def-cat>
		<def-cat n="there">
			<cat-item lemma="there" tags="adv"/>
			<!--<cat-item lemma="there" tags="prn"/>-->
		</def-cat>
		<def-cat n="more">
			<cat-item lemma="more" tags="adv"/>
			<cat-item lemma="more" tags="preadv"/>
			<cat-item lemma="more" tags="det.*"/>
		</def-cat>
		<def-cat n="most">
			<cat-item lemma="most" tags="adv"/>
			<cat-item lemma="most" tags="preadv"/>
			<cat-item lemma="most" tags="det.*"/>
		</def-cat>
		<def-cat n="family">
			<cat-item lemma="family" tags="n"/>
			<cat-item lemma="family" tags="n.*"/>
		</def-cat>
		<def-cat n="mrs">
			<cat-item lemma="mr" tags="n.*"/>
			<cat-item lemma="ms" tags="n.*"/>
			<cat-item lemma="mrs" tags="n.*"/>
			<cat-item lemma="mr." tags="n.*"/>
			<cat-item lemma="ms." tags="n.*"/>
			<cat-item lemma="mrs." tags="n.*"/>
			<cat-item lemma="miss" tags="n.*"/>
			<cat-item lemma="dr." tags="n.*"/>
			<cat-item lemma="dr" tags="n.*"/>
		</def-cat>

		<def-cat n="periods">
			<cat-item lemma="day" tags="n.*"/>
			<cat-item lemma="week" tags="n.*"/>
			<cat-item lemma="month" tags="n.*"/>
			<cat-item lemma="year" tags="n.*"/>
		</def-cat>

		<def-cat n="weekdays"> 
			<cat-item lemma="monday" tags="n.*"/>
			<cat-item lemma="tuesday" tags="n.*"/>
			<cat-item lemma="wednesday" tags="n.*"/>
			<cat-item lemma="thursday" tags="n.*"/>
			<cat-item lemma="friday" tags="n.*"/>
			<cat-item lemma="saturday" tags="n.*"/>
			<cat-item lemma="sunday" tags="n.*"/>
		</def-cat>

		<def-cat n="months">
			<cat-item lemma="january" tags="n.*"/>
			<cat-item lemma="february" tags="n.*"/>
			<cat-item lemma="march" tags="n.*"/>
			<cat-item lemma="april" tags="n.*"/>
			<cat-item lemma="april" tags="np.*"/>  <!--(bad PoS tagging)--> 
			<cat-item lemma="may" tags="n.*"/>
			<cat-item lemma="june" tags="n.*"/>
			<cat-item lemma="june" tags="np.*"/>   <!--(bad PoS tagging)--> 
			<cat-item lemma="july" tags="n.*"/>
			<cat-item lemma="august" tags="n.*"/>
			<cat-item lemma="august" tags="np.*"/> <!--(bad PoS tagging)--> 
			<cat-item lemma="september" tags="n.*"/>
			<cat-item lemma="october" tags="n.*"/>
			<cat-item lemma="november" tags="n.*"/>
			<cat-item lemma="december" tags="n.*"/>
		</def-cat>

		<def-cat n="nom_det_deletion">
			<cat-item lemma="guitar" tags="n.*"/>
			<cat-item lemma="piano" tags="n.*"/>
			<cat-item lemma="saxophone" tags="n.*"/>
			<cat-item lemma="trumpet" tags="n.*"/>
			<cat-item lemma="drum" tags="n.*"/>
		</def-cat>

		<def-cat n="any_tag">
			<cat-item tags="*"/>
		</def-cat>

		<def-cat n="xxxx">	<!-- for tests only to block rules -->
			<cat-item tags="xxxx"/>
		</def-cat>
	</section-def-cats>

	<section-def-attrs>
		<def-attr n="a_nom">
			<attr-item tags="n"/>
			<attr-item tags="n.acr"/>
			<attr-item tags="n.unc"/>
			<attr-item tags="np"/>
			<attr-item tags="np.ant"/>
			<attr-item tags="np.cog"/>
			<attr-item tags="np.loc"/>
			<attr-item tags="np.top"/>
			<attr-item tags="np.org"/>
			<attr-item tags="np.al"/>
		</def-attr>
		<def-attr n="a_nouns">
			<attr-item tags="n"/>
			<attr-item tags="n.acr"/>
			<attr-item tags="n.unc"/>
			<attr-item tags="np"/>
			<attr-item tags="np.ant"/>
			<attr-item tags="np.cog"/>
			<attr-item tags="np.loc"/>
			<attr-item tags="np.top"/>
			<attr-item tags="np.org"/>
			<attr-item tags="np.al"/>
			<attr-item tags="prn.subj"/>
			<attr-item tags="prn.obj"/>
			<attr-item tags="prn.tn"/>
			<attr-item tags="prn.iobj"/>
			<attr-item tags="prn.dobj"/>
		</def-attr>
		<def-attr n="a_cog">
			<attr-item tags="np.cog"/>
		</def-attr>
		<def-attr n="a_top">
			<attr-item tags="np"/>
			<attr-item tags="np.top"/>
			<attr-item tags="np.loc"/>
		</def-attr>
		<def-attr n="a_gen">			<!-- Gender -->
			<attr-item tags="m"/>
			<attr-item tags="f"/>
			<attr-item tags="nt"/>
			<attr-item tags="mf"/>
			<attr-item tags="mfn"/>
			<attr-item tags="GD"/>
		</def-attr>
		<def-attr n="a_nbr">			<!-- Number -->
			<attr-item tags="sg"/>
			<attr-item tags="pl"/>
			<attr-item tags="sp"/>
			<attr-item tags="ND"/>
			<attr-item tags="4"/>  <!-- link-to="4" -->
		</def-attr>
		<def-attr n="a_cas">			<!-- Case -->
			<attr-item tags="nom"/>
			<attr-item tags="gen"/>
			<attr-item tags="dat"/>
			<attr-item tags="acc"/>
		</def-attr>
		<def-attr n="a_pers">			<!-- Person -->
			<attr-item tags="p1"/>
			<attr-item tags="p2"/>
			<attr-item tags="p3"/>
			<attr-item tags="PD"/>
			<attr-item tags="3"/>  <!-- link-to="3" -->
		</def-attr>
		<def-attr n="a_adj">
			<attr-item tags="adj"/>
			<attr-item tags="adj.comp"/>
			<attr-item tags="adj.sup"/>
			<attr-item tags="adj.sint"/>
			<attr-item tags="adj.sint.comp"/>
			<attr-item tags="adj.sint.sup"/>
			<attr-item tags="adj.ord"/>
			<attr-item tags="adj.pred"/>
		</def-attr>
		<def-attr n="a_adj_typ">
			<attr-item tags="sw"/>
			<attr-item tags="st"/>
			<attr-item tags="mix"/>
		</def-attr>
		<def-attr n="a_num">
			<attr-item tags="num"/>
			<attr-item tags="num.ord"/>
		</def-attr>
		<def-attr n="a_ord_num">
			<attr-item tags="num.ord"/>
			<attr-item tags="adj.ord"/>
		</def-attr>
		<def-attr n="a_sint_adj">
			<attr-item tags="adj.sint"/>
			<attr-item tags="adj.sint.comp"/>
			<attr-item tags="adj.sint.sup"/>
		</def-attr>
		<def-attr n="a_sint_adj1">
			<attr-item tags="adj.sint"/>
		</def-attr>
		<def-attr n="a_det">
			<attr-item tags="det.def"/>
			<attr-item tags="det.ind"/>
			<attr-item tags="det.qnt"/>
			<attr-item tags="det.dem"/>
			<attr-item tags="det.pos"/>
			<attr-item tags="det.ord"/>
			<attr-item tags="det.itg"/>
		</def-attr>
		<def-attr n="a_any_det"> <!-- same as in def-cat any_det (+ det.itg) -->
			<attr-item tags="det.def"/>
			<attr-item tags="det.ind"/>
			<attr-item tags="det.qnt"/>
			<attr-item tags="det.dem"/>
			<attr-item tags="det.pos"/>
			<attr-item tags="det.ord"/>
			<attr-item tags="det.itg"/>
			<attr-item tags="prn.det"/>
			<attr-item tags="prn.pos"/>
		</def-attr>
		<def-attr n="a_def_det">
			<attr-item tags="det.def"/>
		</def-attr>
		<def-attr n="a_det1">
			<attr-item tags="det"/>
		</def-attr>
		<def-attr n="a_itg">
			<attr-item tags="adv.itg"/>
			<attr-item tags="prn.itg"/>
		</def-attr>
		<def-attr n="a_prn1">
			<attr-item tags="prn"/>
		</def-attr>
		<def-attr n="a_prn"> <!-- others than prpers -->
			<attr-item tags="prn.dem"/>
			<attr-item tags="prn.ind"/>
			<attr-item tags="prn.itg"/>
		</def-attr>
		<def-attr n="a_pers_prn">
			<attr-item tags="prn.pers"/>
		</def-attr>
		<def-attr n="a_tipus_prn">
			<attr-item tags="prn.subj"/>
			<attr-item tags="prn.obj"/>
			<attr-item tags="prn.tn"/>
			<attr-item tags="prn.iobj"/>
			<attr-item tags="prn.dobj"/>
		</def-attr>
		<def-attr n="a_prpos">
			<attr-item tags="prn.pos"/>
			<attr-item tags="prn.det"/>
			<attr-item tags="det.pos"/>
		</def-attr>
		<def-attr n="a_rel">
			<attr-item tags="prn.rel"/>
			<attr-item tags="prn.rel.nn"/>
			<attr-item tags="prn.rel.an"/>
		</def-attr>
		<def-attr n="a_any_prn">
			<attr-item tags="prn.pers"/>
			<attr-item tags="prn.dem"/>
			<attr-item tags="prn.ind"/>
			<attr-item tags="prn.itg"/>
			<attr-item tags="prn.pos"/>
			<attr-item tags="prn.det"/>
			<attr-item tags="prn.subj"/>
			<attr-item tags="prn.obj"/>
			<attr-item tags="prn.tn"/>
			<attr-item tags="prn.iobj"/>
			<attr-item tags="prn.dobj"/>
			<attr-item tags="prn.ref"/>
			<attr-item tags="prn.rel"/>
			<attr-item tags="prn.qnt"/>
			<attr-item tags="det.qnt"/>
			<attr-item tags="det.pos"/>
		</def-attr>
		<def-attr n="a_verb">
			<attr-item tags="vblex"/>
			<attr-item tags="vbser"/>
			<attr-item tags="vbhaver"/>
			<attr-item tags="vbdo"/>
			<attr-item tags="vbmod"/>
			<attr-item tags="vaux"/>
			<attr-item tags="vblex.sep.fm"/>
			<attr-item tags="vblex.sep.fs"/>
			<attr-item tags="vblex.sep"/>
		</def-attr>
		<def-attr n="a_verb1">
			<attr-item tags="vblex"/>
			<attr-item tags="vbser"/>
			<attr-item tags="vbhaver"/>
			<attr-item tags="vbdo"/>
			<attr-item tags="vbmod"/>
			<attr-item tags="vaux"/>
		</def-attr>
		<def-attr n="a_sep_verb">
			<attr-item tags="vblex.sep.fm"/>
			<attr-item tags="vblex.sep.fs"/>
			<attr-item tags="vblex.sep"/>
		</def-attr>
		<def-attr n="a_sep_verb1">
			<attr-item tags="vblex.sep"/>
		</def-attr>
		<def-attr n="a_tense">
			<attr-item tags="pp"/>
			<attr-item tags="ger"/>
			<attr-item tags="pii"/>
			<attr-item tags="pis"/>
			<attr-item tags="pri"/>
			<attr-item tags="past"/>
			<attr-item tags="inf"/>
			<attr-item tags="pres"/>
			<attr-item tags="pprs"/>
			<attr-item tags="subs"/>
			<attr-item tags="imp"/>
			<attr-item tags="2"/>  <!-- link-to="2" -->
		</def-attr>
		<def-attr n="a_pr">
			<attr-item tags="pr"/>
		</def-attr>
		<def-attr n="a_cnj">
			<attr-item tags="cnjcoo"/>
			<attr-item tags="cnjsub"/>
			<attr-item tags="cnjadv"/>
		</def-attr>
		<def-attr n="a_ij">
			<attr-item tags="ij"/>
		</def-attr>
		<def-attr n="a_coma">
			<attr-item tags="cm"/>
		</def-attr>

		<def-attr n="a_PoS">
			<attr-item tags="n"/>
			<attr-item tags="np"/>
			<attr-item tags="det"/>
			<attr-item tags="adj"/>
			<attr-item tags="num"/>
			<attr-item tags="adv"/>
			<attr-item tags="prn"/>
			<attr-item tags="vblex"/>
			<attr-item tags="vbmod"/>
			<attr-item tags="vaux"/>
			<attr-item tags="vbdo"/>
			<attr-item tags="vbhaver"/>
			<attr-item tags="vbser"/>
			<attr-item tags="pr"/>
			<attr-item tags="pprep"/>
			<attr-item tags="cnjcoo"/>
			<attr-item tags="cnjsub"/>
			<attr-item tags="cnjadv"/>
			<attr-item tags="ij"/>
			<attr-item tags="guio"/>
			<attr-item tags="cm"/>
			<attr-item tags="sent"/>
		</def-attr> 

	</section-def-attrs>

	<section-def-vars>
		<def-var n="caseFirstWord" v="Aa"/>
		<def-var n="caseOtherWord" v="aa"/>
		<def-var n="EOS" v="true"/>
		<def-var n="v_tense"/>
		<def-var n="v_cas"/>
		<def-var n="v_gen"/>
		<def-var n="v_nbr"/>
		<def-var n="v_pers"/>
		<def-var n="v_a_adj"/>
		<def-var n="v_a_adj1"/>
		<def-var n="v_sint_adj"/>
		<def-var n="v_gen_adj"/>
		<def-var n="v_nbr_adj"/>
		<def-var n="v_cas_adj"/>
		<def-var n="v_typ_adj"/>
		<def-var n="v_a_nom"/>
		<def-var n="v_gen_nom"/>
		<def-var n="v_nbr_nom"/>
		<def-var n="v_cas_nom"/>
		<def-var n="v_pers_nom"/>
		<def-var n="v_pers_det"/>
		<def-var n="v_gen_det"/>
		<def-var n="v_nbr_det"/>
		<def-var n="v_cas_det"/>
		<def-var n="v_pos_det"/>
		<def-var n="v_typ_det"/>
		<def-var n="v_lem_det"/>
		<def-var n="v_obj_prn"/>
		<def-var n="v_gen_prn"/>
		<def-var n="v_nbr_prn"/>
		<def-var n="v_cas_prn"/>
		<def-var n="v_pers_prn"/>
		<def-var n="v_typ_prn"/>
		<def-var n="v_tense_verb"/>
		<def-var n="v_pers_verb"/>
		<def-var n="v_nbr_verb"/>
		<def-var n="v_lemq_verb"/>
		<def-var n="v_pers_noun"/>
		<def-var n="v_nbr_noun"/>
		<def-var n="v_pers_tmp"/>
		<def-var n="v_cas_prep"/>
		<def-var n="v_info"/>
		<def-var n="v_subject"/>
		<def-var n="v_predicate"/>
		<def-var n="v_firstWord"/>
		<def-var n="v_firstWord_PoS"/>
		<def-var n="v_firstWord_qst"/>
		<def-var n="v_chunk_tag"/>
	</section-def-vars>


	<section-def-lists>

		<def-list n="l_periods">
			<list-item v="day"/>
			<list-item v="week"/>
			<list-item v="month"/>
			<list-item v="year"/>
		</def-list>

		<def-list n="l_weekdays"> 
			<list-item v="monday"/>
			<list-item v="tuesday"/>
			<list-item v="wednesday"/>
			<list-item v="thursday"/>
			<list-item v="friday"/>
			<list-item v="saturday"/>
			<list-item v="sunday"/>
		</def-list>

		<def-list n="l_on_weekdays"> 
			<list-item v="on mondays"/>
			<list-item v="on tuesdays"/>
			<list-item v="on wednesdays"/>
			<list-item v="on thursdays"/>
			<list-item v="on fridays"/>
			<list-item v="on saturdays"/>
			<list-item v="on sundays"/>
		</def-list>

		<def-list n="l_months">
			<list-item v="january"/>
			<list-item v="february"/>
			<list-item v="march"/>
			<list-item v="april"/>
			<list-item v="may"/>
			<list-item v="june"/>
			<list-item v="july"/>
			<list-item v="august"/>
			<list-item v="september"/>
			<list-item v="october"/>
			<list-item v="november"/>
			<list-item v="december"/>
		</def-list>

		<def-list n="l_daytimes">
			<list-item v="morning"/>
			<list-item v="noon"/>
			<list-item v="midday"/>
			<list-item v="afternoon"/>
			<list-item v="evening"/>
			<list-item v="night"/>
			<list-item v="midnight"/>
		</def-list>

		<def-list n="l_days">
			<list-item v="yesterday"/>
			<list-item v="today"/>
			<list-item v="tomorrow"/>
		</def-list>

		<def-list n="l_det_deletion">
			<list-item v="guitar"/>
			<list-item v="piano"/>
			<list-item v="saxophone"/>
			<list-item v="trumpet"/>
			<list-item v="drum"/>
		</def-list>

	</section-def-lists>


<!-- macros: 	(by wth)
	set_		store tag into variable (set_[name] stores value into variable v_[name])
	chg_		change value of variable
	rm_			remove tag from variable
	upd_		write variable into clip
	build_		add/change all grammar tags to find a lemma in TL dict
-->

	<section-def-macros>

		<!-- reset variables / set default at end of sentence -->
		<def-macro n="reset_variables" npar="0">
			<let><var n="v_subject"/><lit v=""/></let>
			<let><var n="v_predicate"/><lit v=""/></let>
			<let><var n="v_gen_nom"/><lit v=""/></let>
			<let><var n="v_nbr_nom"/><lit-tag v="sg"/></let>  <!-- see <section-def-vars> -->
			<let><var n="v_cas_nom"/><lit v=""/></let>
			<let><var n="v_pers_nom"/><lit-tag v="p3"/></let>
			<let><var n="v_gen_prn"/><lit v=""/></let>
			<let><var n="v_nbr_prn"/><lit-tag v="sg"/></let>
			<let><var n="v_cas_prn"/><lit v=""/></let>
			<let><var n="v_pers_prn"/><lit-tag v="p3"/></let>
			<let><var n="v_gen"/><lit-tag v="GD"/></let>
			<let><var n="v_nbr"/><lit-tag v="ND"/></let>
			<let><var n="v_cas"/><lit-tag v="nom"/></let>
			<let><var n="v_pers"/><lit-tag v="p3"/></let>
			<let><var n="v_pers_noun"/><lit v=""/></let>
			<let><var n="v_nbr_noun"/><lit v=""/></let>
		</def-macro>


		<!-- set to true in "RULE: SENT", after the first word set EOS to false -->
		<def-macro n="firstWord" npar="1">
			<let><var n="caseFirstWord"/><lit v="aa"/></let>
			<choose>
				<when>
					<test>
						<equal>
							<var n="EOS"/>
							<lit v="true"/>
						</equal>
					</test>
					<let>
						<var n="v_firstWord_PoS"/>
						<clip pos="1" side="tl" part="a_PoS"/>
					</let>
					<let>
						<var n="v_firstWord"/>
						<clip pos="1" side="tl" part="lemh"/>
					</let>
					<call-macro n="set_firstWord_qst">
						<with-param pos="1"/>
					</call-macro>
				</when>
			</choose>
			<let>
				<var n="EOS"/>
				<lit v="false"/>
			</let>
		</def-macro>

		<!-- questions start with verb or itg -->
		<def-macro n="set_firstWord_qst" npar="1">
			<let>
				<var n="v_firstWord_qst"/>
				<var n="v_firstWord_PoS"/>
			</let>
			<choose>
				<when>
					<test>
						<or>
							<equal>
								<clip pos="1" side="tl" part="a_itg"/>
								<lit-tag v="adv.itg"/>
							</equal>
							<equal>
								<clip pos="1" side="tl" part="a_itg"/>
								<lit-tag v="prn.itg"/>
							</equal>
						</or>
					</test>
					<let>
						<var n="v_firstWord_qst"/>
						<lit-tag v="itg"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (adj) test if adj is sint / OUT: v_sint_adj -->
		<def-macro n="test-if-synthetic" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_sint_adj1"/>
							<lit-tag v="adj.sint"/>
						</equal>
					</test>
					<let>
						<var n="v_sint_adj"/>
						<lit-tag v="sint"/>
					</let>
				</when>
				<otherwise>
					<let>
						<var n="v_sint_adj"/>
						<lit v=""/>
					</let>
				</otherwise>
			</choose>
		</def-macro>


		<!-- (verb) convert "pres" to "pri", "past" to "pii" / OUT: v_tense -->
		<def-macro n="set_tense" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_tense"/>
							<lit-tag v="pres"/>
						</equal>
					</test>
					<let>
						<var n="v_tense"/>
						<lit-tag v="pri"/>
					</let>
				</when>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_tense"/>
							<lit-tag v="past"/>
						</equal>
					</test>
					<let>
						<var n="v_tense"/>
						<lit-tag v="pii"/>
					</let>
				</when>
				<otherwise>
					<let>
						<var n="v_tense"/>
						<clip pos="1" side="tl" part="a_tense"/>
					</let>
				</otherwise>
			</choose>
		</def-macro>


		<!-- (verb) convert "pres" to "pri", "past" to "pii" / OUT: v_tense_verb -->
		<def-macro n="set_tense_verb" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_tense"/>
							<lit-tag v="pres"/>
						</equal>
					</test>
					<let>
						<var n="v_tense_verb"/>
						<lit-tag v="pri"/>
					</let>
				</when>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_tense"/>
							<lit-tag v="past"/>
						</equal>
					</test>
					<let>
						<var n="v_tense_verb"/>
						<lit-tag v="pii"/>
					</let>
				</when>
				<otherwise>
					<let>
						<var n="v_tense_verb"/>
						<clip pos="1" side="tl" part="a_tense"/>
					</let>
				</otherwise>
			</choose>
		</def-macro>


		<!-- (noun) get gender, if empty set "nt" / OUT: v_gen -->
		<def-macro n="set_gen" npar="1">
			<let>
				<var n="v_gen"/>
				<clip pos="1" side="tl" part="a_gen"/>
			</let>
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_gen"/>
							<lit v=""/>
						</equal>
					</test>
					<let>
						<var n="v_gen"/>
						<lit-tag v="nt"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (noun) get gender, if empty set "mf" / OUT: v_gen -->
		<def-macro n="set_mf_gen" npar="1">
			<let>
				<var n="v_gen"/>
				<clip pos="1" side="tl" part="a_gen"/>
			</let>
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_gen"/>
							<lit v=""/>
						</equal>
					</test>
					<let>
						<var n="v_gen"/>
						<lit-tag v="mf"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (verb) after predicate set default case to accusative (dative?) / OUT: v_cas_nom -->
		<def-macro n="chg_cas_nom" npar="1">
			<choose>
				<when>
					<test>
						<or>
							<equal>
								<var n="v_predicate"/>
								<lit-tag v="vblex"/>
							</equal>
							<equal>
								<var n="v_predicate"/>
								<lit-tag v="vbhaver"/>
							</equal>
						</or>
					</test>
					<choose>
						<when>
							<test>
								<or>
									<equal>
										<var n="v_cas_nom"/>
										<lit-tag v="nom"/>
									</equal>
									<equal>
										<var n="v_cas_nom"/>
										<lit v=""/>
									</equal>
								</or>
							</test>
							<let>
								<var n="v_cas_nom"/>
								<lit-tag v="acc"/>
								<!--<lit-tag v="dat"/>-->
							</let>
						</when>
					</choose>
				</when>
			</choose>
		</def-macro>


		<!-- (after PR) get existing case, if empty set "accusative" / OUT: v_cas -->
		<def-macro n="set_acc_cas" npar="1">
			<let>
				<var n="v_cas"/>
				<clip pos="1" side="tl" part="a_cas"/>
			</let>
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_cas"/>
							<lit v=""/>
						</equal>
					</test>
					<let>
						<var n="v_cas"/>
						<lit-tag v="acc"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (after PR) get existing case, if empty set "dative" / OUT: v_cas -->
		<def-macro n="set_dat_cas" npar="1">
			<let>
				<var n="v_cas"/>
				<clip pos="1" side="tl" part="a_cas"/>
			</let>
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_cas"/>
							<lit v=""/>
						</equal>
					</test>
					<let>
						<var n="v_cas"/>
						<lit-tag v="dat"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (noun) get existing case, if empty set "nominative" / OUT: v_cas -->
		<def-macro n="set_cas" npar="1">
			<let>
				<var n="v_cas"/>
				<clip pos="1" side="tl" part="a_cas"/>
			</let>
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_cas"/>
							<lit v=""/>
						</equal>
					</test>
					<let>
						<var n="v_cas"/>
						<lit-tag v="nom"/>
					</let>
				</when>
			</choose>
		</def-macro>

		<!-- (noun) get number, if empty set "sg" / OUT: v_nbr -->
		<def-macro n="set_nbr" npar="1">
			<let>
				<var n="v_nbr"/>
				<clip pos="1" side="tl" part="a_nbr"/>
			</let>
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_nbr"/>
							<lit v=""/>
						</equal>
					</test>
					<let>
						<var n="v_nbr"/>
						<lit-tag v="sg"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (noun) get number, if empty set "sp" / OUT: v_nbr -->
		<def-macro n="set_sp_nbr" npar="1">
			<let>
				<var n="v_nbr"/>
				<clip pos="1" side="tl" part="a_nbr"/>
			</let>
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_nbr"/>
							<lit v=""/>
						</equal>
					</test>
					<let>
						<var n="v_nbr"/>
						<lit-tag v="sp"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (noun) gender if empty set "nt" / OUT: v_gen -->
		<def-macro n="chg_nt_gen" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_gen"/>
							<lit v=""/>
						</equal>
					</test>
					<let>
						<var n="v_gen"/>
						<lit-tag v="nt"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (TL) if "sp" set "sg" / OUT: v_nbr -->
		<def-macro n="chg_sp__sg_nbr" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_nbr"/>
							<lit-tag v="sp"/>
						</equal>
					</test>
					<let>
						<var n="v_nbr"/>
						<lit-tag v="sg"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (verb) if "sp" set "sg" / OUT: v_nbr_verb -->
		<def-macro n="chg_sp__sg_nbr_verb" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_nbr_verb"/>
							<lit-tag v="sp"/>
						</equal>
					</test>
					<let>
						<var n="v_nbr_verb"/>
						<lit-tag v="sg"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (verb) if "sp" set "sg" / OUT: v_nbr_nom -->
		<def-macro n="chg_sp__verb_nom" npar="1">
			<choose>
				<when>
					<test>
						<and>
							<equal>
								<var n="v_nbr_nom"/>
								<lit-tag v="sp"/>
							</equal>
							<not>
								<equal>
									<var n="v_nbr_verb"/>
									<lit v=""/>
								</equal>
							</not>
						</and>
					</test>
					<let>
						<var n="v_nbr_nom"/>
						<var n="v_nbr_verb"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (prn) if "mf"/"mfn" set "m" / OUT: v_gen -->
		<def-macro n="chg_mf__m_gen" npar="1">
			<choose>
				<when>
					<test>
						<or>
							<equal>
								<var n="v_gen"/>
								<lit-tag v="mf"/>
							</equal>
							<equal>
								<var n="v_gen"/>
								<lit-tag v="mfn"/>
							</equal>
						</or>
					</test>
					<let>
						<var n="v_gen"/>
						<lit-tag v="m"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (nom) if "sg" change "mf" to "m" / OUT: v_gen -->
		<def-macro n="chg_sg_mf__m_gen" npar="1">
			<choose>
				<when>
					<test>
						<and>
							<equal>
								<var n="v_nbr"/>
								<lit-tag v="sg"/>
							</equal>
							<equal>
								<var n="v_gen"/>
								<lit-tag v="mf"/>
							</equal>
						</and>
					</test>
					<let>
						<var n="v_gen"/>
						<lit-tag v="m"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (adj) if "sg" change "mf" to "m" / OUT: v_gen_adj -->
		<def-macro n="chg_sg_mf__m_gen_adj" npar="1">
			<choose>
				<when>
					<test>
						<and>
							<equal>
								<var n="v_nbr_adj"/>
								<lit-tag v="sg"/>
							</equal>
							<equal>
								<var n="v_gen_adj"/>
								<lit-tag v="mf"/>
							</equal>
						</and>
					</test>
					<let>
						<var n="v_gen_adj"/>
						<lit-tag v="m"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (noun) get person, if empty set "p3" / OUT: v_pers -->
		<def-macro n="set_pers" npar="1">
			<let>
				<var n="v_pers"/>
				<clip pos="1" side="tl" part="a_pers"/>
			</let>
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_pers"/>
							<lit v=""/>
						</equal>
					</test>
					<let>
						<var n="v_pers"/>
						<lit-tag v="p3"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (nom) get case, if empty set "dat" / OUT: v_cas_nom -->
		<def-macro n="set_dat_cas_nom" npar="1">
			<let>
				<var n="v_cas_nom"/>
				<clip pos="1" side="tl" part="a_cas"/>
			</let>
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_cas_nom"/>
							<lit v=""/>
						</equal>
					</test>
					<let>
						<var n="v_cas_nom"/>
						<lit-tag v="dat"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (TL) if "prn.obj" change case to dative / OUT: v_cas_nom -->
		<def-macro n="chg_dat_cas_nom" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_obj_prn"/>
							<lit-tag v="prn.obj"/>
						</equal>
					</test>
					<let>
						<var n="v_cas_nom"/>
						<lit-tag v="dat"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- ten pounds => zehn Pfund -->
		<!-- (TL) if singular word set "sg" / OUT: v_nbr_nom -->
		<def-macro n="upd_pl_lem__sg_nbr_nom" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="lem"/>
							<lit v="Pfund"/>
						</equal>
					</test>
					<choose>
						<when>
							<test>
								<equal>
									<clip pos="1" side="tl" part="a_nbr"/>
									<lit-tag v="pl"/>
								</equal>
							</test>
							<let>
								<var n="v_nbr_nom"/>
								<lit-tag v="sg"/>
							</let>
							<let>
								<clip pos="1" side="tl" part="a_nbr"/>
								<lit-tag v="sg"/>
							</let>
						</when>
					</choose>
				</when>
			</choose>
		</def-macro>


		<!-- (nom) set nomen default values / OUT: v...nom, v_subject -->
		<def-macro n="chg_default_nom" npar="1">
			<let><var n="v_pers_nom"/><lit-tag v="p3"/></let>
			<let><var n="v_gen_nom"/><lit-tag v="mf"/></let>
			<let><var n="v_nbr_nom"/><lit-tag v="sg"/></let>
			<let><var n="v_cas_nom"/><lit-tag v="nom"/></let>
			<let><var n="v_subject"/><lit-tag v="nom"/></let>
		</def-macro>


		<!-- (nom) get case, if empty or "nom" set "acc" / OUT: v_cas_nom -->
		<def-macro n="set_acc_cas_nom" npar="1">
			<let>
				<var n="v_cas_nom"/>
				<clip pos="1" side="tl" part="a_cas"/>
			</let>
			<choose>
				<when>
					<test>
						<or>
							<equal>
								<var n="v_cas_nom"/>
								<lit v=""/>
							</equal>
							<equal>
								<var n="v_cas_nom"/>
								<lit v="nom"/>
							</equal>
						</or>
					</test>
					<let>
						<var n="v_cas_nom"/>
						<lit-tag v="acc"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- set global noun variables -->
		<!-- OUT: v_gen, v_nbr, v_cas, v_pers -->
		<def-macro n="set_pers_gen_nbr_cas" npar="1">
			<call-macro n="set_pers">
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="set_gen">
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="set_nbr">
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="set_cas">
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="chg_sg_mf__m_gen">  <!-- "mf" => "m" -->
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="chg_mfn__pl_nbr">  <!-- (for plural nouns) -->
				<with-param pos="1"/>
			</call-macro>
		</def-macro>


		<!-- (nom) store grammar tags of current noun -->
		<!-- OUT: v_gen_nom, v_nbr_nom, v_cas_nom, v_pers_nom -->
		<def-macro n="set_pers_gen_nbr_cas_nom" npar="1">
			<call-macro n="set_pers">
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="set_nbr">
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="set_cas">
				<with-param pos="1"/>
			</call-macro>

			<choose>
				<when> <!-- np.cog always "mf" -->
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_nom"/>
							<lit-tag v="np.cog"/>
						</equal>
					</test>
					<let>
						<var n="v_gen"/>
						<lit-tag v="mf"/>
					</let>
				</when>
				<when> <!-- np.ant, gender of person -->
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_nom"/>
							<lit-tag v="np.ant"/>
						</equal>
					</test>
					<let>
						<var n="v_gen"/>
						<clip pos="1" side="tl" part="a_gen"/>
					</let>
				</when>
				<otherwise>
					<call-macro n="set_gen">
						<with-param pos="1"/>
					</call-macro>

					<call-macro n="chg_sg_mf__m_gen">  <!-- "mf" => "m" -->
						<with-param pos="1"/>
					</call-macro>
					<call-macro n="chg_mfn__pl_nbr">  <!-- (for plural nouns) -->
						<with-param pos="1"/>
					</call-macro>
				</otherwise>
			</choose>

			<let><var n="v_pers_nom"/><var n="v_pers"/></let>
			<let><var n="v_gen_nom"/><var n="v_gen"/></let>
			<let><var n="v_nbr_nom"/><var n="v_nbr"/></let>
			<let><var n="v_cas_nom"/><var n="v_cas"/></let>

			<!-- propagate to verb -->
			<let><var n="v_subject"/><lit-tag v="nom"/></let>
			<let><var n="v_pers_noun"/><var n="v_pers"/></let>
			<let><var n="v_nbr_noun"/><var n="v_nbr"/></let>

			<call-macro n="chg_cas_nom"> <!-- after predicate set dat/acc -->
				<with-param pos="1"/>
			</call-macro>
		</def-macro>


		<!-- (prn) store grammar tags of pronoun -->
		<!-- OUT: v_gen_prn, v_nbr_prn, v_cas_prn, v_pers_prn -->
		<def-macro n="set_pers_gen_nbr_cas_prn" npar="1">
			<call-macro n="set_pers">
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="set_gen">
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="set_nbr">
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="set_cas">
				<with-param pos="1"/>
			</call-macro>

			<call-macro n="chg_mf__m_gen">  <!-- "mf" => "m" -->
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="chg_sp__sg_nbr">  <!-- "sp" => "sg" -->
				<with-param pos="1"/>
			</call-macro>

			<let><var n="v_pers_prn"/><var n="v_pers"/></let>
			<let><var n="v_gen_prn"/><var n="v_gen"/></let>
			<let><var n="v_nbr_prn"/><var n="v_nbr"/></let>
			<let><var n="v_cas_prn"/><var n="v_cas"/></let>

			<!-- propagate to verb -->
			<let><var n="v_subject"/><lit-tag v="prn"/></let>
			<let><var n="v_pers_noun"/><var n="v_pers"/></let>
			<let><var n="v_nbr_noun"/><var n="v_nbr"/></let>
		</def-macro>


		<!-- (det) if "pl" set "mfn" / OUT: v_gen -->
		<def-macro n="chg_pl_m_f_nt__mfn_gen" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_nbr"/>
							<lit-tag v="pl"/>
						</equal>
					</test>
					<let>
						<var n="v_gen"/>
						<lit-tag v="mfn"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (adj) if "pl" set "m" or "f" to "mf" / OUT: v_gen -->
		<def-macro n="chg_pl_m_f__mf_gen" npar="1">
			<choose>
				<when>
					<test>
						<and>
							<equal>
								<var n="v_nbr"/>
								<lit-tag v="pl"/>
							</equal>
							<or>
								<equal>
									<var n="v_gen"/>
									<lit-tag v="m"/>
								</equal>
								<equal>
									<var n="v_gen"/>
									<lit-tag v="f"/>
								</equal>
							</or>
						</and>
					</test>
					<let>
						<var n="v_gen"/>
						<lit-tag v="mf"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (nom) if "pl" set "mf" / OUT: v_gen -->
		<def-macro n="chg_pl__mf_gen" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_nbr"/>
							<lit-tag v="pl"/>
						</equal>
					</test>
					<let>
						<var n="v_gen"/>
						<lit-tag v="mf"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (adj) if "pl" set "mf" / OUT: v_gen_adj -->
		<def-macro n="chg_pl__mf_gen_adj" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_nbr_adj"/>
							<lit-tag v="pl"/>
						</equal>
					</test>
					<let>
						<var n="v_gen_adj"/>
						<lit-tag v="mf"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (nom) if "p1/p2" set "mf" / OUT: v_gen -->
		<def-macro n="chg_p1p2__mf_gen" npar="1">
			<choose>
				<when>
					<test>
						<or>
							<equal>
								<var n="v_pers"/>
								<lit-tag v="p1"/>
							</equal>
							<equal>
								<var n="v_pers"/>
								<lit-tag v="p2"/>
							</equal>
						</or>
					</test>
					<let>
						<var n="v_gen"/>
						<lit-tag v="mf"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (adj) if "mfn" set "mf" / OUT: v_gen -->
		<def-macro n="chg_mfn__mf_gen" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_gen"/>
							<lit-tag v="mfn"/>
						</equal>
					</test>
					<let>
						<var n="v_gen"/>
						<lit-tag v="mf"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (adj) if "mfn" set "mf" / OUT: v_gen_adj -->
		<def-macro n="chg_mfn__mf_gen_adj" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_gen_adj"/>
							<lit-tag v="mfn"/>
						</equal>
					</test>
					<let>
						<var n="v_gen_adj"/>
						<lit-tag v="mf"/>
					</let>
				</when>
			</choose>
		</def-macro>

		<!-- (nom / plural noun) if "mfn" set "pl" / OUT: v_nbr -->
		<def-macro n="chg_mfn__pl_nbr" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_gen"/>
							<lit-tag v="mfn"/>
						</equal>
					</test>
					<let>
						<var n="v_nbr"/>
						<lit-tag v="pl"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (adj) set type of declension (sw/st/mix) / IN: <det> / OUT: v_typ_adj -->
		<def-macro n="set_typ_adj" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_def_det"/>
							<lit-tag v="det.def"/>
						</equal>
					</test>
					<let>
						<var n="v_typ_adj"/>
						<lit-tag v="sw"/>  <!-- week -->
					</let>
				</when>
				<when>
					<test>
						<or>
							<equal>
								<clip pos="1" side="tl" part="a_det1"/>
								<lit-tag v="det"/>
							</equal>
							<equal>
								<clip pos="1" side="tl" part="prpers"/>
								<lit-tag v="prn"/>
							</equal>
						</or>
					</test>
					<let>
						<var n="v_typ_adj"/>
						<lit-tag v="mix"/>  <!-- mixed -->
					</let>
				</when>
				<otherwise>
					<let>
						<var n="v_typ_adj"/>
						<lit-tag v="st"/>  <!-- strong -->
					</let>
				</otherwise>
			</choose>
		</def-macro>


		<!-- (adj) add "sint" tag if not exists / OUT: v_sint_adj, v_a_adj -->
		<def-macro n="set_sint_a_adj" npar="1">
			<let>
				<var n="v_a_adj"/>
				<clip pos="1" side="tl" part="a_adj"/>
			</let>
			<call-macro n="test-if-synthetic">
				<with-param pos="1"/>
			</call-macro>
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_sint_adj"/>
							<lit v=""/>
						</equal>
					</test>
					<choose>
						<when>
							<test>
								<equal>
									<var n="v_a_adj"/>
									<lit-tag v="adj.comp"/>
								</equal>
							</test>
							<let>
								<var n="v_a_adj"/>
								<lit-tag v="adj.sint.comp"/>
							</let>
						</when>
						<when>
							<test>
								<equal>
									<var n="v_a_adj"/>
									<lit-tag v="adj.sup"/>
								</equal>
							</test>
							<let>
								<var n="v_a_adj"/>
								<lit-tag v="adj.sint.sup"/>
							</let>
						</when>
						<when>
							<test>
								<equal>
									<var n="v_a_adj"/>
									<lit-tag v="adj"/>
								</equal>
							</test>
							<let>
								<var n="v_a_adj"/>
								<lit-tag v="adj.sint"/>
							</let>
						</when>
					</choose>
				</when>
			</choose>
		</def-macro>


		<!-- (SL) (1.det+2.adj) more/most add comp/sup / OUT: v_a_adj -->
		<def-macro n="chg_more_most_a_adj" npar="2">
			<choose>
				<when>
					<test>
						<equal caseless="yes">
							<clip pos="1" side="sl" part="lem"/>
							<lit v="more"/>
						</equal>
					</test>
					<let>
						<var n="v_a_adj"/>
						<concat>
							<var n="v_a_adj"/>
							<lit-tag v="comp"/>
						</concat>
					</let>
				</when>
				<when>
					<test>
						<or>
							<equal caseless="yes">
								<clip pos="1" side="sl" part="lem"/>
								<lit v="most"/>
							</equal>
							<equal caseless="yes">
								<clip pos="1" side="sl" part="lem"/>
								<lit v="the most"/>
							</equal>
						</or>
					</test>
					<let>
						<var n="v_a_adj"/>
						<concat>
							<var n="v_a_adj"/>
							<lit-tag v="sup"/>
						</concat>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (det) "most expensive" => "das teuerste" / OUT: v_lem_det, v_pos_det -->
		<def-macro n="chg_lem_det" npar="1">
			<let>
				<var n="v_lem_det"/>
				<clip pos="1" side="tl" part="lem"/>
			</let>
			<let>
				<var n="v_pos_det"/>
				<clip pos="1" side="tl" part="a_det"/>
			</let>
			<choose>
				<when>
					<test>
						<or>
							<equal caseless="yes">
								<clip pos="1" side="sl" part="lem"/>
								<lit v="more"/>
							</equal>
							<equal caseless="yes">
								<clip pos="1" side="sl" part="lem"/>
								<lit v="most"/>
							</equal>
							<equal caseless="yes">
								<clip pos="1" side="sl" part="lem"/>
								<lit v="the most"/>
							</equal>
						</or>
					</test>
					<let>
						<var n="v_lem_det"/>
						<lit v="der"/>
					</let>
					<let>
						<var n="v_pos_det"/>
						<lit-tag v="det.def"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (adj) remove "sint" tag / OUT: v_a_adj -->
		<def-macro n="rm_sint_a_adj" npar="1">  <!--(not used)-->
			<choose>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_adj"/>
							<lit-tag v="adj.sint.comp"/>
						</equal>
					</test>
					<let>
						<var n="v_a_adj"/>
						<lit-tag v="adj.comp"/>
					</let>
				</when>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_adj"/>
							<lit-tag v="adj.sint.sup"/>
						</equal>
					</test>
					<let>
						<var n="v_a_adj"/>
						<lit-tag v="adj.sup"/>
					</let>
				</when>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_adj"/>
							<lit-tag v="adj.sint"/>
						</equal>
					</test>
					<let>
						<var n="v_a_adj"/>
						<lit-tag v="adj"/>
					</let>
				</when>
				<otherwise>
					<let>
						<var n="v_a_adj"/>
						<clip pos="1" side="tl" part="a_adj"/>
					</let>
				</otherwise>
			</choose>
		</def-macro>


		<!-- (sep verb) change tag fs to fm -->
		<def-macro n="chg_fs__fm_verb" npar="1">
			<choose>
				<when>  <!-- change "fs" to "fm" -->
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_sep_verb"/>
							<lit-tag v="vblex.sep.fs"/>
						</equal>
					</test>
					<let>
						<clip pos="1" side="tl" part="a_sep_verb"/>
						<lit-tag v="vblex.sep.fm"/>
					</let>
				</when>
			</choose>

			<choose>  <!-- remove fm/fs if imp/inf/pp/ger -->
				<when>
					<test>
						<or>
							<equal>
								<clip pos="1" side="tl" part="a_sep_verb"/>
								<lit-tag v="vblex.sep.fm"/>
							</equal>
							<equal>
								<clip pos="1" side="tl" part="a_sep_verb"/>
								<lit-tag v="vblex.sep.fs"/>
							</equal>
						</or>
					</test>
					<choose>
						<when>
							<test>
								<or>
									<equal>
										<clip pos="1" side="tl" part="a_tense"/>
										<lit-tag v="imp"/>
									</equal>
									<equal>
										<clip pos="1" side="tl" part="a_tense"/>
										<lit-tag v="inf"/>
									</equal>
									<equal>
										<clip pos="1" side="tl" part="a_tense"/>
										<lit-tag v="pp"/>
									</equal>
									<equal>
										<clip pos="1" side="tl" part="a_tense"/>
										<lit-tag v="ger"/>
									</equal>
								</or>
							</test>
							<let>
								<clip pos="1" side="tl" part="a_sep_verb"/>  <!-- a_sep_verb! -->
								<lit-tag v="vblex.sep"/>
							</let>
						</when>
					</choose>
				</when>
			</choose>
		</def-macro>


		<!-- (sep verb) add tag fm -->
		<def-macro n="upd_fm_verb" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_sep_verb"/>
							<lit-tag v="vblex.sep"/>
						</equal>
					</test>
					<choose>
						<when>
							<test>
								<not>
									<or>
										<equal>
											<clip pos="1" side="tl" part="a_tense"/>
											<lit-tag v="imp"/>
										</equal>
										<equal>
											<clip pos="1" side="tl" part="a_tense"/>
											<lit-tag v="inf"/>
										</equal>
										<equal>
											<clip pos="1" side="tl" part="a_tense"/>
											<lit-tag v="ger"/>
										</equal>
									</or>
								</not>
							</test>
							<let>
								<clip pos="1" side="tl" part="a_sep_verb"/>  <!-- a_sep_verb! -->
								<lit-tag v="vblex.sep.fm"/>
							</let>
						</when>
					</choose>
				</when>
			</choose>
		</def-macro>


		<!-- (verb) remove "sep" tag -->
		<def-macro n="rm_sep_a_verb" npar="1">
			<choose>
				<when>
					<test>
						<or>
							<equal>
								<clip pos="1" side="tl" part="a_sep_verb"/>
								<lit-tag v="vblex.sep"/>
							</equal>
							<equal>
								<clip pos="1" side="tl" part="a_sep_verb"/>
								<lit-tag v="vblex.sep.fm"/>
							</equal>
							<equal>
								<clip pos="1" side="tl" part="a_sep_verb"/>
								<lit-tag v="vblex.sep.fs"/>
							</equal>
						</or>
					</test>
					<let>
						<clip pos="1" side="tl" part="a_sep_verb"/>
						<lit-tag v="vblex"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (adj+nom) set variables for adjective declension -->
		<!-- OUT: v_gen_adj, v_nbr_adj, v_cas_adj, v_typ_adj, v_a_adj -->
		<def-macro n="set_decl_a_adj" npar="2">
			<choose>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_ord_num"/>
							<lit-tag v="adj.ord"/>
						</equal>
					</test>
					<let>
						<var n="v_a_adj"/>
						<clip pos="1" side="tl" part="a_ord_num"/>
					</let>
				</when>
				<otherwise>
					<call-macro n="set_sint_a_adj">  <!-- OUT: v_a_adj, v_sint_adj -->
						<with-param pos="1"/>
					</call-macro>
				</otherwise>
			</choose>
			
			<call-macro n="set_gen">
				<with-param pos="2"/>
			</call-macro>
			<call-macro n="set_nbr">
				<with-param pos="2"/>
			</call-macro>
			<call-macro n="set_cas">
				<with-param pos="2"/>
			</call-macro>

			<call-macro n="chg_sg_mf__m_gen">  <!-- sg: "mf" => "m" -->
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="chg_pl__mf_gen">
				<with-param pos="2"/>        <!-- pl: nbr of noun -->
			</call-macro>
			<call-macro n="chg_mfn__mf_gen"> <!-- "mfn" => "mf" -->
				<with-param pos="1"/>        <!-- IN/OUT: v_gen -->
			</call-macro>
			
			<let><var n="v_gen_adj"/><var n="v_gen"/></let>
			<let><var n="v_nbr_adj"/><var n="v_nbr"/></let>
			<let><var n="v_cas_adj"/><var n="v_cas"/></let>
			<let><var n="v_typ_adj"/><lit-tag v="st"/></let> <!-- default type -->

			<let>
				<clip pos="1" side="tl" part="tags"/>
				<concat>
					<var n="v_a_adj"/>
					<var n="v_gen_adj"/>
					<var n="v_nbr_adj"/>
					<var n="v_cas_adj"/>
					<var n="v_typ_adj"/>
				</concat>
			</let>
		</def-macro>


		<!-- (adj) adj after det, then set type / OUT: v_typ_adj, v_a_adj -->
		<def-macro n="set_decl_typ_a_adj" npar="1">
			<call-macro n="set_sint_a_adj">  <!-- OUT: v_a_adj -->
				<with-param pos="1"/>
			</call-macro>
			<choose>
				<when>
					<test>
						<or>
							<equal>
								<var n="v_a_adj"/>
								<lit-tag v="adj.sint.comp"/>
							</equal>
							<equal>
								<var n="v_a_adj"/>
								<lit-tag v="adj.sint.sup"/>
							</equal>
							<equal>
								<var n="v_a_adj"/>
								<lit-tag v="adj.comp"/>
							</equal>
							<equal>
								<var n="v_a_adj"/>
								<lit-tag v="adj.sup"/>
							</equal>
						</or>
					</test>
					<let><var n="v_typ_adj"/><lit v=""/></let>
				</when>
				<otherwise>
					<call-macro n="set_typ_adj">
						<with-param pos="1"/>
					</call-macro>
				</otherwise>
			</choose>
		</def-macro>


		<!-- (adj / DET ADJ NOM) adj after det, then set type -->
		<!-- OUT: v_gen_adj, v_nbr_adj, v_cas_adj, v_typ_adj, v_a_adj -->
		<def-macro n="set_decl_det_a_adj" npar="3">
			<call-macro n="set_decl_a_adj">
				<with-param pos="2"/>
				<with-param pos="3"/>
			</call-macro>
			<call-macro n="set_typ_adj">
				<with-param pos="1"/>
			</call-macro>
		</def-macro>


		<!-- (verb) get pers, if empty copy pers from last noun (v_pers_nom) / OUT: v_pers_verb -->
		<def-macro n="set_pers_verb" npar="1">
			<let>
				<var n="v_pers_verb"/>
				<clip pos="1" side="tl" part="a_pers"/>
			</let>
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_pers_verb"/>
							<lit v=""/>
						</equal>
					</test>
					<let>
						<var n="v_pers_verb"/>
						<var n="v_pers_noun"/>  <!-- person of last noun -->
					</let>
				</when>
			</choose>
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_pers_verb"/>
							<lit v=""/>
						</equal>
					</test>
					<let>
						<var n="v_pers_verb"/>
						<lit-tag v="PD"/>
						<!--<lit-tag v="p3"/>-->
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (verb) get nbr, if empty copy nbr from last noun (v_nbr_nom) / OUT: v_nbr_nom -->
		<def-macro n="set_nbr_verb" npar="1">
			<let>
				<var n="v_nbr_verb"/>
				<clip pos="1" side="tl" part="a_nbr"/>
			</let>
			<choose>
				<when>
					<test>
						<not>
							<equal>
								<var n="v_nbr_noun"/>
								<lit v=""/>
							</equal>
						</not>
					</test>
					<let>
						<var n="v_nbr_verb"/>
						<var n="v_nbr_noun"/>  <!-- nbr of last noun -->
					</let>
				</when>
			</choose>
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_nbr_verb"/>
							<lit v=""/>
						</equal>
					</test>
					<let>
						<var n="v_nbr_verb"/>
						<lit-tag v="ND"/>
						<!--<lit-tag v="sg"/>-->
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (verb) if "inf" change it to pri (pres) / (correction of tagging)-->
		<def-macro n="upd_inf_pri_tense" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_tense"/>
							<lit-tag v="inf"/>
						</equal>
					</test>
					<let>
						<clip pos="1" side="tl" part="a_tense"/>
						<lit-tag v="pri"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (verb) change "inf" to "pri" (pres) / OUT: v_tense_verb -->
		<def-macro n="chg_inf_tense_verb" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_tense_verb"/>
							<lit-tag v="inf"/>
						</equal>
					</test>
					<let><var n="v_tense_verb"/><lit-tag v="pri"/></let>
				</when>
			</choose>
		</def-macro>


		<!-- (verb) if "inf/pp/pprs" clear variables / OUT: v_pers_verb, v_nbr_verb -->
		<def-macro n="chg_pers_nbr_verb" npar="1">
			<choose>
				<when>
					<test>
						<or>
							<equal>
								<var n="v_tense_verb"/>
								<lit-tag v="inf"/>
							</equal>
							<equal>
								<var n="v_tense_verb"/>
								<lit-tag v="pp"/>
							</equal>
							<equal>
								<var n="v_tense_verb"/>
								<lit-tag v="pprs"/>
							</equal>
						</or>
					</test>
					<let><var n="v_pers_verb"/><lit v=""/></let>
					<let><var n="v_nbr_verb"/><lit v=""/></let>
				</when>
				<when>
					<test>
						<or>
							<equal>
								<var n="v_tense_verb"/>
								<lit-tag v="ger"/>
							</equal>
							<equal>
								<var n="v_tense_verb"/>
								<lit-tag v="subs"/>
							</equal>
						</or>
					</test>
					<let><var n="v_pers_verb"/><lit v=""/></let>
					<!--(temporarily change to "inf" because "ger"/"subs" tags not avaiable in German dict)-->
					<let><var n="v_tense_verb"/><lit-tag v="inf"/></let>
					<let><var n="v_nbr_verb"/><lit v=""/></let>
				</when>
				<when>
					<test>
						<equal>
							<var n="v_tense_verb"/>
							<lit-tag v="imp"/>
						</equal>
					</test>
					<let><var n="v_pers_verb"/><lit v=""/></let>
					<choose>
						<when>
							<test>
								<equal>
									<var n="v_nbr_verb"/>
									<lit v=""/>
								</equal>
							</test>
							<let><var n="v_nbr_verb"/><lit-tag v="sg"/></let>
						</when>
					</choose>
				</when>
			</choose>
		</def-macro>


		<!-- (verb) / OUT: v_tense, v_pers_verb, v_nbr_verb -->
		<def-macro n="set_tense_pers_nbr_verb" npar="1">
			<choose>
				<when>
					<test>
						<or>
							<equal>
								<clip pos="1" side="tl" part="a_tense"/>
								<lit-tag v="pprs"/>
							</equal>
							<equal>
								<clip pos="1" side="tl" part="a_tense"/>
								<lit-tag v="pp"/>
							</equal>
							<equal>
								<clip pos="1" side="tl" part="a_tense"/>
								<lit-tag v="inf"/>
							</equal>
							<equal>
								<clip pos="1" side="tl" part="a_tense"/>
								<lit-tag v="ger"/>
							</equal>
							<equal>
								<clip pos="1" side="tl" part="a_tense"/>
								<lit-tag v="subs"/>
							</equal>
						</or>
					</test>
					<!-- some variables may be empty -->
					<let> <var n="v_tense_verb"/> <clip pos="1" side="tl" part="a_tense"/> </let>
					<let> <var n="v_pers_verb"/> <clip pos="1" side="tl" part="a_pers"/> </let>
					<let> <var n="v_nbr_verb"/> <clip pos="1" side="tl" part="a_nbr"/> </let>
				</when>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_tense"/>
							<lit-tag v="imp"/>
						</equal>
					</test>
					<call-macro n="set_pers_verb">
						<with-param pos="1"/>
					</call-macro>
					<!-- some variables may be empty -->
					<let> <var n="v_tense_verb"/> <clip pos="1" side="tl" part="a_tense"/> </let>
					<let> <var n="v_nbr_verb"/> <clip pos="1" side="tl" part="a_nbr"/> </let>
				</when>

				<otherwise>	 <!-- all variables with values -->
					<call-macro n="set_tense_verb">
						<with-param pos="1"/>
					</call-macro>
					<call-macro n="set_pers_verb">
						<with-param pos="1"/>
					</call-macro>
					<call-macro n="set_nbr_verb">
						<with-param pos="1"/>
					</call-macro>
				</otherwise>
			</choose>

			<call-macro n="chg_pers_nbr_verb">  <!-- if "inf"/"imp" -->
				<with-param pos="1"/>
			</call-macro>
			<let>
				<var n="v_predicate"/>  <!-- nouns follow the verb have acc/dat case -->
				<clip pos="1" side="tl" part="a_verb"/>
			</let>
		</def-macro>


		<!-- (verb) fill empty variables / OUT: v_tense, v_pers_verb, v_nbr_verb -->
		<def-macro n="set_determined_verb" npar="1">
			<choose>
				<when>
					<test>
						<or>
							<equal>
								<var n="v_tense_verb"/>
								<lit v=""/>
							</equal>
							<equal>
								<var n="v_tense_verb"/>
								<lit-tag v="2"/>
							</equal>
						</or>
					</test>
					<let>
						<var n="v_tense_verb"/>
						<lit-tag v="TD"/>
					</let>
				</when>
			</choose>
			<choose>
				<when>
					<test>
						<or>
							<equal>
								<var n="v_pers_verb"/>
								<lit v=""/>
							</equal>
							<equal>
								<var n="v_pers_verb"/>
								<lit-tag v="3"/>
							</equal>
						</or>
					</test>
					<let>
						<var n="v_pers_verb"/>
						<lit-tag v="PD"/>
					</let>
				</when>
			</choose>
			<choose>
				<when>
					<test>
						<or>
							<equal>
								<var n="v_nbr_verb"/>
								<lit v=""/>
							</equal>
							<equal>
								<var n="v_nbr_verb"/>
								<lit-tag v="4"/>
							</equal>
						</or>
					</test>
					<let>
						<var n="v_nbr_verb"/>
						<lit-tag v="ND"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (verb) if empty set link / OUT: v_tense_verb -->
		<def-macro n="chg_empty_to_link_verb" npar="1">
			<choose>
				<when>
					<test>
						<not>
							<or>
								<equal>
									<var n="v_tense_verb"/>
									<lit-tag v="inf"/>
								</equal>
								<equal>
									<var n="v_tense_verb"/>
									<lit-tag v="pprs"/>
								</equal>
								<equal>
									<var n="v_tense_verb"/>
									<lit-tag v="pp"/>
								</equal>
							</or>
						</not>
					</test>
					<choose>
						<when>
							<test>
								<equal>
									<var n="v_pers_verb"/>
									<lit v=""/>
								</equal>
							</test>
							<let>
								<var n="v_pers_verb"/>
								<lit-tag v="3"/>  <!-- link-to="3" -->
							</let>
						</when>
					</choose>
					<choose>
						<when>
							<test>
								<equal>
									<var n="v_nbr_verb"/>
									<lit v=""/>
								</equal>
							</test>
							<let>
								<var n="v_nbr_verb"/>
								<lit-tag v="4"/>  <!-- link-to="4" -->
							</let>
						</when>
					</choose>
				</when>
			</choose>
		</def-macro>


		<!-- (verb) if "inf" change it to pri (pres) / (correction of tagging)-->
		<def-macro n="upd_inf_pres_tense" npar="1">
			<choose>
				<when>
					<test>
						<or>
							<equal>
								<clip pos="1" side="tl" part="a_tense"/>
								<lit-tag v="inf"/>
							</equal>
							<equal>
								<clip pos="1" side="tl" part="a_tense"/>
								<lit-tag v="prs"/>
							</equal>
							<equal>
								<clip pos="1" side="tl" part="a_tense"/>
								<lit-tag v="ito"/>
							</equal>
						</or>
					</test>
					<let>
						<clip pos="1" side="tl" part="a_tense"/>
						<lit-tag v="pri"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (prn) convert obj to iobj / change case to dative / OUT: v_obj_prn,v_cas_prn -->
		<def-macro n="set_dat_cas_obj_prn" npar="1">
			<let>
				<var n="v_obj_prn"/>
				<clip pos="1" side="tl" part="a_tipus_prn"/>
			</let>
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_obj_prn"/>
							<lit-tag v="prn.obj"/>
						</equal>
					</test>
					<let>
						<var n="v_obj_prn"/>
						<lit-tag v="prn.iobj"/>
					</let>
					<let>
						<var n="v_cas_prn"/>
						<lit-tag v="dat"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (prn) convert obj to dobj / change case to accusative / OUT: v_obj_prn,v_cas_prn -->
		<def-macro n="set_acc_cas_dobj_prn" npar="1">
			<let>
				<var n="v_obj_prn"/>
				<clip pos="1" side="tl" part="a_tipus_prn"/>
			</let>
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_obj_prn"/>
							<lit-tag v="prn.obj"/>
						</equal>
					</test>
					<let>
						<var n="v_obj_prn"/>
						<lit-tag v="prn.dobj"/>
					</let>
					<let>
						<var n="v_cas_prn"/>
						<lit-tag v="acc"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (prn/nom) change obj to dobj / change case to accusative / OUT: v_a_nom,v_cas_nom -->
		<def-macro n="chg_acc_cas_a_nom" npar="1">
			<let>
				<var n="v_a_nom"/>
				<lit-tag v="prn.dobj"/>  <!-- direct object -->
			</let>
			<let>
				<var n="v_cas_nom"/>
				<lit-tag v="acc"/>  <!-- accusative -->
			</let>
		</def-macro>


		<!-- (itg) / OUT: v_pers, v_gen, v_nbr, v_cas -->
		<def-macro n="set_gen_nbr_cas_itg" npar="1">
			<choose>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_prn"/>
							<lit-tag v="prn.itg"/>
						</equal>
					</test>
					<call-macro n="set_pers">
						<with-param pos="1"/>
					</call-macro>
					<call-macro n="set_mf_gen">
						<with-param pos="1"/>
					</call-macro>
					<let><var n="v_nbr"/><lit-tag v="sp"/></let>
					<call-macro n="set_cas">
						<with-param pos="1"/>
					</call-macro>
				</when>
				<otherwise>
					<let><var n="v_pers"/><lit v=""/></let>
					<let><var n="v_gen"/><lit v=""/></let>
					<let><var n="v_nbr"/><lit v=""/></let>
					<let><var n="v_cas"/><lit v=""/></let>
				</otherwise>
			</choose>

			<choose>
				<when>
					<test>
						<not>
							<equal caseless="yes">
								<clip pos="1" side="tl" part="lem"/>
								<lit v="was"/>
							</equal>
						</not>
					</test>
					<let><var n="v_subject"/><lit-tag v="prn"/></let>
				</when>
			</choose>

			<let><var n="v_pers_prn"/><var n="v_pers"/></let>
			<let><var n="v_gen_prn"/><var n="v_gen"/></let>
			<let><var n="v_nbr_prn"/><var n="v_nbr"/></let>
			<let><var n="v_cas_prn"/><var n="v_cas"/></let>

			<!-- propagate to verb -->
			<let><var n="v_pers_noun"/><var n="v_pers"/></let>
			<let><var n="v_nbr_noun"/><var n="v_nbr"/></let>
		</def-macro>


		<!-- (det) set variables / OUT: v...det -->
		<def-macro n="build_det" npar="1">
			<call-macro n="set_pers_gen_nbr_cas">
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="chg_sp__sg_nbr">  <!-- "sp" => "sg" -->
				<with-param pos="1"/>        <!-- OUT: v_nbr -->
			</call-macro>
			<let><var n="v_pers_det"/><var n="v_pers"/></let>
			<let><var n="v_gen_det"/><var n="v_gen"/></let>
			<let><var n="v_nbr_det"/><var n="v_nbr"/></let>
			<let><var n="v_cas_det"/><var n="v_cas"/></let>
			<let>
				<clip pos="1" side="tl" part="tags"/>
				<concat>
					<clip pos="1" side="tl" part="a_any_det"/>
					<var n="v_gen_det"/>
					<var n="v_nbr_det"/>
					<var n="v_cas_det"/>
				</concat>
			</let>
		</def-macro>


		<!-- (det) set variables / IN: v...nom / OUT: v...det, v...nom -->
		<def-macro n="build2_det" npar="1">
			<call-macro n="build3_det"> <!-- (IN: v...nom / OUT: v...det) -->
				<with-param pos="1"/>
			</call-macro>
			<let>
				<clip pos="1" side="tl" part="tags"/>
				<concat>
					<clip pos="1" side="tl" part="a_any_det"/>
					<var n="v_gen_det"/>
					<var n="v_nbr_det"/>
					<var n="v_cas_det"/>
					<var n="v_typ_det"/> <!-- only set for lem="andere" -->
				</concat>
			</let>
		</def-macro>


		<!-- (det) proc3_det like proc2_det but without concat -->
		<!-- (det) (IN: v...nom / OUT: v...det) -->
		<def-macro n="build3_det" npar="1">
			<let><var n="v_pers"/><var n="v_pers_nom"/></let>
			<let><var n="v_gen"/><var n="v_gen_nom"/></let>
			<let><var n="v_nbr"/><var n="v_nbr_nom"/></let>
			<let><var n="v_cas"/><var n="v_cas_nom"/></let>

			<call-macro n="chg_pl_m_f_nt__mfn_gen">  <!-- "pl": m/f/nt => mfn -->
				<with-param pos="1"/>                <!-- OUT: v_gen -->
			</call-macro>
			<call-macro n="chg_sg_mf__m_gen">        <!-- "sg": mf => m -->
				<with-param pos="1"/>                <!-- OUT: v_gen -->
			</call-macro>

			<let><var n="v_pers_det"/><var n="v_pers"/></let>
			<let><var n="v_gen_det"/><var n="v_gen"/></let>
			<let><var n="v_nbr_det"/><var n="v_nbr"/></let>
			<let><var n="v_cas_det"/><var n="v_cas"/></let>

			<choose>
				<when>  <!-- "andere" then add type -->
					<test>
						<equal caseless="yes">
							<clip pos="1" side="tl" part="lem"/>
							<lit v="andere"/>
						</equal>
					</test>
					<call-macro n="set_typ_adj">
						<with-param pos="1"/>
					</call-macro>
					<let><var n="v_typ_det"/><var n="v_typ_adj"/></let>
				</when>
				<otherwise>
					<let><var n="v_typ_det"/><lit v=""/></let>
				</otherwise>
			</choose>
		</def-macro>


		<!-- (num) -->
		<def-macro n="build_num" npar="1">
			<let>
				<var n="v_nbr"/>
				<clip pos="1" side="tl" part="a_nbr"/>
			</let>
			<choose>
				<when>  <!-- "num.ord" with suffix "." -->
					<test>
						<and>
							<equal>
								<clip pos="1" side="tl" part="a_num"/>
								<lit-tag v="num.ord"/>
							</equal>
							<not>
								<ends-with>
									<clip pos="1" side="tl" part="lem"/>
									<lit v="."/>
								</ends-with>
							</not>
						</and>
					</test>
					<let>
						<clip pos="1" side="tl" part="lem"/>
						<concat>
							<clip pos="1" side="tl" part="lem"/>
							<lit v="."/>
						</concat>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- (nom) set variables / OUT: v...nom -->
		<def-macro n="build_nom" npar="1">
			<call-macro n="set_pers_gen_nbr_cas_nom">
				<with-param pos="1"/>
			</call-macro>

			<choose>
				<when>  <!-- if v_cas_prep has a value then copy it to v_cas_nom -->
					<test>
						<not>
							<equal>
								<var n="v_cas_prep"/>
								<lit v=""/>
							</equal>
						</not>
					</test>
					<let><var n="v_cas_nom"/><var n="v_cas_prep"/></let>
					<let><var n="v_cas_prep"/><lit v=""/></let> <!-- clear after used! -->
				</when>
			</choose>
			<choose>
				<when>  <!-- "np.cog" with "mf" -->
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_cog"/>
							<lit-tag v="np.cog"/>
						</equal>
					</test>
					<let><var n="v_gen_nom"/><lit-tag v="mf"/></let>
				</when>
			</choose>

			<let>
				<clip pos="1" side="tl" part="tags"/>
				<concat>
					<clip pos="1" side="tl" part="a_nom"/>
					<var n="v_gen_nom"/>
					<var n="v_nbr_nom"/>
					<var n="v_cas_nom"/>
				</concat>
			</let>
		</def-macro>


		<!-- (det+nom) set variables / OUT: v...det, v...nom -->
		<def-macro n="build_det_nom" npar="2">
			<call-macro n="build_nom">  <!-- OUT: v...nom -->
				<with-param pos="2"/>
			</call-macro>
			<choose>
				<when>  <!-- <prn> -->
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_prn1"/>
							<lit-tag v="prn"/>
						</equal>
					</test>
					<call-macro n="build2_prn">  <!-- IN: v...nom -->
						<with-param pos="1"/>
					</call-macro>
				</when>
				<otherwise>  <!-- <det> -->
					<call-macro n="build2_det">  <!-- IN: v...nom -->
						<with-param pos="1"/>
					</call-macro>
				</otherwise>
			</choose>
		</def-macro>


		<!-- (adj) set variables / IN: v...nom / OUT: v...adj -->
		<def-macro n="build2_adj" npar="1">
			<let><var n="v_gen_adj"/><var n="v_gen_nom"/></let>
			<let><var n="v_nbr_adj"/><var n="v_nbr_nom"/></let>
			<let><var n="v_cas_adj"/><var n="v_cas_nom"/></let>

			<call-macro n="chg_sg_mf__m_gen_adj">  <!-- sg: "mf" => "m" -->
				<with-param pos="1"/>              <!-- OUT: v_gen_adj -->
			</call-macro>
			<call-macro n="chg_pl__mf_gen_adj">    <!-- pl: => "mf" -->
				<with-param pos="1"/>              <!-- OUT: v_gen_adj -->
			</call-macro>
			<call-macro n="chg_mfn__mf_gen_adj">  <!-- "mfn" => "mf" -->
				<with-param pos="1"/>             <!-- IN/OUT: v_gen_adj -->
			</call-macro>
			<call-macro n="set_decl_typ_a_adj">
				<with-param pos="1"/>
			</call-macro>

			<let>
				<clip pos="1" side="tl" part="tags"/>
				<concat>
					<var n="v_a_adj"/>
					<var n="v_gen_adj"/>
					<var n="v_nbr_adj"/>
					<var n="v_cas_adj"/>
					<var n="v_typ_adj"/>
				</concat>
			</let>
		</def-macro>


		<!-- (adj) set variables / IN: v...nom / OUT: v...adj -->
		<def-macro n="build_adj" npar="1">
			<call-macro n="set_sint_a_adj">  <!-- OUT: v_a_adj -->
				<with-param pos="1"/>
			</call-macro>
			<let>
				<clip pos="1" side="tl" part="a_adj"/>
				<var n="v_a_adj"/>
			</let>
			<!-- <let>
				<clip pos="1" side="tl" part="tags"/>
				<concat>
					<var n="v_a_adj"/>
					<var n="v_gen_adj"/>
					<var n="v_nbr_adj"/>
					<var n="v_cas_adj"/>
					<var n="v_typ_adj"/>
				</concat>
			</let> -->
		</def-macro>


		<!-- (adj+nom) set variables / OUT: v...adj, v...nom -->
		<def-macro n="build_adj_nom" npar="2">
			<call-macro n="build_nom">  <!-- OUT: v...nom -->
				<with-param pos="2"/>
			</call-macro>
			<call-macro n="build2_adj">  <!-- IN: v...nom -->
				<with-param pos="1"/>
			</call-macro>
		</def-macro>


		<!-- (1.det+2.adj+3.nom) set variables / OUT: v...det, v...adj, v...nom -->
		<def-macro n="build_det_adj_nom" npar="3">
			<call-macro n="build_det_nom">
				<with-param pos="1"/>
				<with-param pos="3"/>
			</call-macro>
			<call-macro n="set_decl_det_a_adj">  <!-- set type of adj declension -->
				<with-param pos="1"/>
				<with-param pos="2"/>
				<with-param pos="3"/>
			</call-macro>
			<call-macro n="chg_more_most_a_adj">
				<with-param pos="1"/>
				<with-param pos="2"/>
			</call-macro>

			<call-macro n="chg_lem_det">  <!-- "most expensive" => "das teuerste" -->
				<with-param pos="1"/>     <!-- OUT: v_lem_det,v_pos_det -->
			</call-macro>
			<choose>
				<when>
					<test>
						<equal>
							<var n="v_pos_det"/>
							<lit-tag v="det.def"/>
						</equal>
					</test>
					<let>
						<clip pos="1" side="tl" part="lem"/>
						<var n="v_lem_det"/>
					</let>
					<let>
						<clip pos="1" side="tl" part="a_det"/>
						<var n="v_pos_det"/>
					</let>
				</when>
			</choose>

			<let>
				<clip pos="2" side="tl" part="tags"/>
				<concat>
					<var n="v_a_adj"/>
					<var n="v_gen_adj"/>
					<var n="v_nbr_adj"/>
					<var n="v_cas_adj"/>
					<var n="v_typ_adj"/>
				</concat>
			</let>
		</def-macro>


		<!-- (prn) / OUT: v...prn -->
		<def-macro n="build_prn" npar="1">
			<call-macro n="set_pers_gen_nbr_cas_prn">
				<with-param pos="1"/>
			</call-macro>
			<choose>  <!--(exec before macro set_dat_cas_obj_prn)-->
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_any_prn"/>
							<lit-tag v="prn.dem"/>
						</equal>
					</test>
					<call-macro n="chg_pl_m_f_nt__mfn_gen">  <!-- m/f/nt => mfn -->
						<with-param pos="1"/>                <!-- OUT: v_gen -->
					</call-macro>
				</when>
				<otherwise>
					<call-macro n="chg_pl_m_f__mf_gen">      <!-- pl: m/f => mf -->
						<with-param pos="1"/>                <!-- OUT: v_gen -->
					</call-macro>
					<call-macro n="chg_p1p2__mf_gen">        <!-- p1/2: m/f => mf -->
						<with-param pos="1"/>                <!-- OUT: v_gen -->
					</call-macro>
				</otherwise>
			</choose>

			<let><var n="v_gen_prn"/><var n="v_gen"/></let>
			<call-macro n="set_dat_cas_obj_prn">  <!-- obj to iobj -->
				<with-param pos="1"/>
			</call-macro>
			<let>  <!-- only the first nom is subj (clear this if one was found) -->
				<var n="v_firstWord_qst"/>
				<lit v=""/>
			</let>

			<choose>
				<when>  <!-- "andere" then add type -->
					<test>
						<equal caseless="yes">
							<clip pos="1" side="tl" part="lem"/>
							<lit v="andere"/>
						</equal>
					</test>
					<call-macro n="set_typ_adj">
						<with-param pos="1"/>
					</call-macro>
					<let><var n="v_typ_prn"/><var n="v_typ_adj"/></let>
					<let>
						<clip pos="1" side="tl" part="tags"/>
						<concat>
							<clip pos="1" side="tl" part="a_any_prn"/>
							<var n="v_gen_prn"/>
							<var n="v_nbr_prn"/>
							<var n="v_cas_prn"/>
							<var n="v_typ_prn"/>
						</concat>
					</let>
				</when>
				<when>
					<test>
						<not>
							<equal>
								<var n="v_obj_prn"/>
								<lit v=""/>
							</equal>
						</not>
					</test>
					<let>
						<clip pos="1" side="tl" part="tags"/>
						<concat>
							<var n="v_obj_prn"/>
							<var n="v_pers_prn"/>
							<var n="v_gen_prn"/>
							<var n="v_nbr_prn"/>
							<var n="v_cas_prn"/>
						</concat>
					</let>
				</when>
				<otherwise>
					<let>
						<clip pos="1" side="tl" part="tags"/>
						<concat>
							<clip pos="1" side="tl" part="a_any_prn"/>
							<var n="v_pers_prn"/>
							<var n="v_gen_prn"/>
							<var n="v_nbr_prn"/>
							<var n="v_cas_prn"/>
						</concat>
					</let>
				</otherwise>
			</choose>
		</def-macro>


		<!-- (prn) / IN: v...nom / OUT: v...prn -->
		<def-macro n="build2_prn" npar="1">
			<let><var n="v_pers_prn"/><var n="v_pers_nom"/></let>
			<let><var n="v_nbr_prn"/><var n="v_nbr_nom"/></let>
			<let><var n="v_cas_prn"/><var n="v_cas_nom"/></let>

			<let><var n="v_nbr"/><var n="v_nbr_prn"/></let>
			<call-macro n="chg_pl_m_f_nt__mfn_gen">  <!-- m/f/nt => mfn -->
				<with-param pos="1"/>                <!-- OUT: v_gen -->
			</call-macro>
			<let><var n="v_gen_prn"/><var n="v_gen"/></let>

			<choose>
				<when>  <!-- "prn.pers" always "nom" -->
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_pers_prn"/>
							<lit-tag v="prn.pers"/>
						</equal>
					</test>
					<let><var n="v_cas_prn"/><lit-tag v="nom"/></let>
					<call-macro n="set_pers">
						<with-param pos="1"/>
					</call-macro>
					<let><var n="v_pers_prn"/><var n="v_pers"/></let>
					<call-macro n="chg_p1p2__mf_gen">
						<with-param pos="1"/>
					</call-macro>
					<let><var n="v_gen_prn"/><var n="v_gen"/></let>
				</when>
			</choose>

			<choose>
				<when>  <!-- "prn.dem" (without pers)-->
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_any_prn"/>
							<lit-tag v="prn.dem"/>
						</equal>
					</test>
					<let>
						<clip pos="1" side="tl" part="tags"/>
						<concat>
							<clip pos="1" side="tl" part="a_any_prn"/>
							<var n="v_gen_prn"/>
							<var n="v_nbr_prn"/>
							<var n="v_cas_prn"/>
						</concat>
					</let>
				</when>
				<when>  <!-- "prn.pos" (without case)-->
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_any_prn"/>
							<lit-tag v="prn.pos"/>
						</equal>
					</test>
					<let>
						<clip pos="1" side="tl" part="tags"/>
						<concat>
							<clip pos="1" side="tl" part="a_any_prn"/>
							<var n="v_pers_prn"/>
							<var n="v_gen_prn"/>
							<var n="v_nbr_prn"/>
						</concat>
					</let>
				</when>
				<otherwise>  <!-- "prn" (with pers) -->
					<let>
						<clip pos="1" side="tl" part="tags"/>
						<concat>
							<clip pos="1" side="tl" part="a_any_prn"/>
							<var n="v_pers_prn"/>
							<var n="v_gen_prn"/>
							<var n="v_nbr_prn"/>
							<var n="v_cas_prn"/>
						</concat>
					</let>
				</otherwise>
			</choose>
		</def-macro>


		<!-- (prn) / OUT: v_pers, v_gen, v_nbr, v_cas -->
		<def-macro n="build_itg" npar="1">
			<call-macro n="set_gen_nbr_cas_itg">
				<with-param pos="1"/>
			</call-macro>
			<!--<let><var n="v_pers_noun"/><lit v=""/></let>
				<let><var n="v_nbr_noun"/><lit v=""/></let> -->
			<let>
				<clip pos="1" side="tl" part="tags"/>
				<concat>
					<clip pos="1" side="tl" part="a_itg"/>
					<var n="v_gen"/>
					<var n="v_nbr"/>
					<var n="v_cas"/>
				</concat>
			</let>
		</def-macro>


		<!-- (prn) / OUT: v...prn -->
		<def-macro n="build_prpers" npar="1">
			<call-macro n="set_pers_gen_nbr_cas_prn">
				<with-param pos="1"/>
			</call-macro>
			<let><var n="v_cas_prn"/><lit-tag v="nom"/></let>

			<choose>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_prpos"/>
							<lit-tag v="prn.pos"/>
						</equal>
					</test>
					<let> 
						<var n="v_obj_prn"/>
						<clip pos="1" side="tl" part="a_prpos"/>
					</let>
				</when>
				<when>  <!-- sentence starts with verb/itg -->
					<test>
						<or>
							<equal>
								<var n="v_firstWord_qst"/>
								<lit-tag v="vbser"/>
							</equal>
							<equal>
								<var n="v_firstWord_qst"/>
								<lit-tag v="itg"/>
							</equal>
						</or>
					</test>
					<let> 
						<var n="v_obj_prn"/>
						<lit-tag v="prn.subj"/>
					</let>
				</when>
				<otherwise> <!-- "obj" to "iobj" -->
					<call-macro n="set_dat_cas_obj_prn"> <!-- v_obj_prn, v_cas_prn --> 
						<with-param pos="1"/>
					</call-macro>
				</otherwise>
			</choose>
			<choose>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_prpos"/>
							<lit-tag v="prn.pos"/>
						</equal>
					</test>
					<let>  <!-- without case -->
						<var n="v_cas_prn"/>
						<lit v=""/>
					</let>
				</when>
			</choose>
			<let>  <!-- only first nom could be subj (clear variable) -->
				<var n="v_firstWord_qst"/>
				<lit v=""/>
			</let>
			<call-macro n="PRPERS_to_prpers">  <!--(for "I" only)-->
				<with-param pos="1"/>
			</call-macro>

			<choose>
				<when>  <!-- "prn.det" without <obj> tag -->
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_prpos"/>
							<lit-tag v="prn.det"/>
						</equal>
					</test>
					<let>
						<clip pos="1" side="tl" part="tags"/>
						<concat>
							<clip pos="1" side="tl" part="a_any_prn"/>
							<var n="v_pers_prn"/>
							<var n="v_gen_prn"/>
							<var n="v_nbr_prn"/>
							<var n="v_cas_prn"/>
						</concat>
					</let>
				</when>
				<otherwise>  <!-- "prn" with <obj> tag -->
					<let>
						<clip pos="1" side="tl" part="tags"/>
						<concat>
							<var n="v_obj_prn"/>    <!-- obj to iobj -->
							<var n="v_pers_prn"/>
							<var n="v_gen_prn"/>
							<var n="v_nbr_prn"/>
							<var n="v_cas_prn"/>
						</concat>
					</let>
				</otherwise>
			</choose>
		</def-macro>


		<!-- (VERB) / IN: v...nom / OUT: v...verb -->
		<def-macro n="build_verb" npar="1">
			<call-macro n="set_tense_pers_nbr_verb">
				<with-param pos="1"/>
			</call-macro>
			<let><var n="v_tense"/><var n="v_tense_verb"/></let>
			<let><var n="v_pers"/><var n="v_pers_verb"/></let>
			<let><var n="v_nbr"/><var n="v_nbr_verb"/></let>

			<!-- verb gets person and number from noun (in global v...nom variables) -->
			<choose>
				<when>  <!-- previous noun is "prn" -->
					<test>
						<equal>
							<var n="v_subject"/>
							<lit-tag v="prn"/>
						</equal>
					</test>
					<let><var n="v_pers_verb"/><var n="v_pers_prn"/></let>
					<let><var n="v_nbr_verb"/><var n="v_nbr_prn"/></let>
				</when>
				<when>  <!-- previous noun is "nom" -->
					<test>
						<equal>
							<var n="v_subject"/>
							<lit-tag v="nom"/>
						</equal>
					</test>
					<let><var n="v_pers_verb"/><var n="v_pers_nom"/></let>
					<let><var n="v_nbr_verb"/><var n="v_nbr_nom"/></let>
				</when>
				<otherwise>
					<call-macro n="chg_sp__sg_nbr">  <!-- "sp" to "sg" -->
						<with-param pos="1"/>
					</call-macro>
					<let><var n="v_pers_verb"/><lit-tag v="PD"/></let>  <!-- "p1"/"p2"/"p3" -->
					<let><var n="v_nbr_verb"/><lit-tag v="ND"/></let>  <!-- "sg"/"pl" -->
				</otherwise>
			</choose>

			<call-macro n="chg_pers_nbr_verb">  <!-- if "inf" clear variables -->
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="chg_sp__sg_nbr_verb">  <!-- "sp" to "sg" -->
				<with-param pos="1"/>
			</call-macro>

			<call-macro n="chg_empty_to_link_verb">
				<with-param pos="1"/>
			</call-macro>

			<call-macro n="upd_fm_verb">  <!-- add fm if missing -->
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="chg_fs__fm_verb"> <!-- separable verbs only -->
				<with-param pos="1"/>
			</call-macro>

			<let>
				<clip pos="1" side="tl" part="tags"/>
				<concat>
					<clip pos="1" side="tl" part="a_verb"/>
					<var n="v_tense_verb"/>
					<var n="v_pers_verb"/>
					<var n="v_nbr_verb"/>
				</concat>
			</let>
			<call-macro n="set_determined_verb">  <!-- update empty variables for chunk -->
				<with-param pos="1"/>
			</call-macro>

			<choose>  <!-- add blank -->
				<when>  <!-- there'll => there<b/>will -->
					<test>
						<equal>
							<clip pos="1" side="sl" part="lem"/>
							<lit v="'ll"/>
						</equal>
					</test>
					<out>
						<b/>
					</out>
				</when>
			</choose>
		</def-macro>


		<!-- (VERB) called for the second verb  -->
		<def-macro n="build_verb2" npar="1">
			<let>
				<var n="v_predicate"/>  <!-- nouns follow the verb have acc/dat case -->
				<clip pos="1" side="tl" part="a_verb"/>
			</let>

			<!-- temporary workaround for separable verbs (only output <fm> form) -->
			<choose>
				<when>  <!-- for separable verbs only -->
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_sep_verb1"/>
							<lit-tag v="vblex.sep"/>
						</equal>
					</test>
					<call-macro n="upd_fm_verb">  <!-- add fm if missing -->
						<with-param pos="1"/>
					</call-macro>
					<call-macro n="chg_fs__fm_verb">  <!-- change fs to fm -->
						<with-param pos="1"/>
					</call-macro>
				</when>
			</choose>
		</def-macro>


		<!-- (PRN + VERB) / OUT: v...nom / v...verb -->
		<def-macro n="build_nom_verb" npar="2">
			<call-macro n="set_pers_gen_nbr_cas_nom">
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="set_tense_pers_nbr_verb">
				<with-param pos="2"/>
			</call-macro>

			<choose>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_prn1"/>
							<lit-tag v="prn"/>
						</equal>
					</test>
					<call-macro n="set_dat_cas_obj_prn">  <!-- "obj" to "iobj" -->
						<with-param pos="1"/>
					</call-macro>
					<let><var n="v_a_nom"/><var n="v_obj_prn"/></let>
					<call-macro n="PRPERS_to_prpers">  <!--(for "I" only)-->
						<with-param pos="1"/>
					</call-macro>
					<choose>
						<when> <!-- copy _prn to _nom -->
							<test>
								<not>
									<equal>
										<var n="v_cas_prn"/>
										<lit v=""/>
									</equal>
								</not>
							</test>
							<let>
								<var n="v_cas_nom"/> <!-- proc out is v...nom -->
								<var n="v_cas_prn"/>
							</let>
						</when>
					</choose>
					<let><var n="v_pers_tmp"/><var n="v_pers_nom"/></let>
				</when>
				<otherwise>
					<let>
						<var n="v_a_nom"/>
						<clip pos="1" side="tl" part="a_nom"/>
					</let>
					<let><var n="v_pers_tmp"/><lit v=""/></let>
				</otherwise>
			</choose>

			<!-- verb gets person and number from noun -->
			<let><var n="v_pers_verb"/><var n="v_pers_nom"/></let>
			<let><var n="v_nbr_verb"/><var n="v_nbr_nom"/></let>
			<call-macro n="chg_pers_nbr_verb">
				<with-param pos="2"/>
			</call-macro>
			<call-macro n="chg_sp__sg_nbr_verb">  <!-- "sp" to "sg" -->
				<with-param pos="1"/>
			</call-macro>
			<call-macro n="chg_sp__verb_nom">  <!-- "sp" to v_nbr_verb -->
				<with-param pos="2"/>
			</call-macro>

			<let><var n="v_pers_nom"/><var n="v_pers_tmp"/></let>

			<let>
				<clip pos="1" side="tl" part="tags"/>
				<concat>
					<clip pos="1" side="tl" part="a_nouns"/>
					<var n="v_gen_nom"/>
					<var n="v_nbr_nom"/>
					<var n="v_cas_nom"/>
				</concat>
			</let>

			<call-macro n="chg_empty_to_link_verb">
				<with-param pos="2"/>
			</call-macro>
			<let>
				<clip pos="2" side="tl" part="tags"/>
				<concat>
					<clip pos="1" side="tl" part="a_verb"/>
					<var n="v_tense_verb"/>
					<var n="v_pers_verb"/>
					<var n="v_nbr_verb"/>
				</concat>
			</let>
		</def-macro>


		<!-- PRPERS to prpers conversion
			Apertium always choose PRPERS for "I" -->
		<def-macro n="PRPERS_to_prpers" npar="1">
			<choose>
				<when>      <!-- "I" : PRPERS => prpers -->
					<test>  <!-- "PRPERS.prn.subj.p1.mf.sg" -->
						<and>
							<or>
								<equal>
									<clip pos="1" side="sl" part="lem"/>
									<lit v="PRPERS"/>
								</equal>
								<equal>
									<clip pos="1" side="sl" part="lem"/>
									<lit v="Prpers"/>
								</equal>
							</or>
							<equal>
								<clip pos="1" side="sl" part="tags"/>
								<lit-tag v="prn.subj.p1.mf.sg"/>
							</equal>
						</and>
					</test>
					<let>
						<clip pos="1" side="sl" part="lem"/>
						<lit v="prpers"/>
					</let>
					<let>
						<clip pos="1" side="tl" part="lem"/>
						<lit v="prpers"/>
					</let>
				</when>
			</choose>
		</def-macro>


		<!-- set tag to ADV if noun is a time / OUT: v_chunk_tag -->
		<def-macro n="chg_ADV_chunk_tag" npar="1">
			<choose>
				<when>
					<test>
						<in caseless="yes">
							<clip pos="1" side="sl" part="lem"/>
							<list n="l_daytimes"/>
						</in>
					</test>
					<let><var n="v_chunk_tag"/><lit-tag v="ADV"/></let>
				</when>
				<when>
					<test>
						<in caseless="yes">
							<clip pos="1" side="sl" part="lem"/>
							<list n="l_weekdays"/>
						</in>
					</test>
					<let><var n="v_chunk_tag"/><lit-tag v="ADV"/></let>
				</when>
				<when>
					<test>
						<in caseless="yes">
							<clip pos="1" side="sl" part="lem"/>
							<list n="l_months"/>
						</in>
					</test>
					<let><var n="v_chunk_tag"/><lit-tag v="ADV"/></let>
				</when>
				<when>
					<test>
						<in caseless="yes">
							<clip pos="1" side="sl" part="lem"/>
							<list n="l_periods"/>
						</in>
					</test>
					<let><var n="v_chunk_tag"/><lit-tag v="ADV"/></let>
				</when>
			</choose>
		</def-macro>


		<!-- change chunk tag / OUT: v_chunk_tag -->
		<def-macro n="set_chunk_tag_verb" npar="1">
			<choose>
				<when>
					<test>
						<equal caseless="yes">
							<clip pos="1" side="sl" part="lem"/>
							<lit v="do"/>
						</equal>
					</test>
					<let>
						<var n="v_chunk_tag"/>
						<lit-tag v="SV_do"/>
					</let>
				</when>

				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_verb"/>
							<lit-tag v="vbser"/>
						</equal>
					</test>
					<let>
						<var n="v_chunk_tag"/>
						<lit-tag v="SV_ser"/>
					</let>
				</when>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_verb"/>
							<lit-tag v="vbhaver"/>
						</equal>
					</test>
					<let>
						<var n="v_chunk_tag"/>
						<lit-tag v="SV_haver"/>
					</let>
				</when>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_verb"/>
							<lit-tag v="vbdo"/>
						</equal>
					</test>
					<let>
						<var n="v_chunk_tag"/>
						<lit-tag v="SV_do"/>
					</let>
				</when>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_verb"/>
							<lit-tag v="vaux"/>
						</equal>
					</test>
					<let>
						<var n="v_chunk_tag"/>
						<lit-tag v="SV_aux"/>
					</let>
				</when>
				<when>
					<test>
						<equal>
							<clip pos="1" side="tl" part="a_verb"/>
							<lit-tag v="vbmod"/>
						</equal>
					</test>
					<let>
						<var n="v_chunk_tag"/>
						<lit-tag v="SV_aux"/>
					</let>
				</when>
				<otherwise>
					<let><var n="v_chunk_tag"/><lit-tag v="SV"/></let>
				</otherwise>
			</choose>
		</def-macro>

	</section-def-macros>


	<section-rules>

		<rule comment="RULE: PRN">
			<pattern>
				<pattern-item n="prn"/>
			</pattern>
			<action>
				<call-macro n="build_prn">  <!-- OUT: v...prn -->
					<with-param pos="1"/>
				</call-macro>
				<modify-case>
					<clip pos="1" side="tl" part="lem"/>
					<lit v="aa"/>
				</modify-case>
				<choose>
					<when>  <!-- "andere" then add type -->
						<test>
							<equal caseless="yes">
								<clip pos="1" side="tl" part="lem"/>
								<lit v="andere"/>
							</equal>
						</test>
						<out>
							<chunk name="prn" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="PRN"/></tag>
									<tag><var n="v_pers_prn"/></tag>
									<tag><var n="v_gen_prn"/></tag>
									<tag><var n="v_nbr_prn"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="whole"/>
								</lu>
							</chunk>
						</out>
					</when>
					<when>  <!-- "prn.pers" with person (p1/p2/p3) -->
						<test>
							<equal>
								<clip pos="1" side="tl" part="a_pers_prn"/>
								<lit-tag v="prn.pers"/>
							</equal>
						</test>
						<out>
							<chunk name="prn" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="PRN"/></tag>
									<tag><var n="v_pers_prn"/></tag>
									<tag><var n="v_gen_prn"/></tag>
									<tag><var n="v_nbr_prn"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="lem"/>
									<clip pos="1" side="tl" part="a_any_prn"/>
									<clip pos="1" side="tl" part="a_pers"/>
									<clip pos="1" side="tl" part="a_gen"/>
									<clip pos="1" side="tl" part="a_nbr"/>
									<clip pos="1" side="tl" part="a_cas"/>
								</lu>
							</chunk>
						</out>
					</when>
					<otherwise>  <!-- "prn" without person -->
						<out>
							<chunk name="prn" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="PRN"/></tag>
									<tag><var n="v_pers_prn"/></tag>
									<tag><var n="v_gen_prn"/></tag>
									<tag><var n="v_nbr_prn"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="lem"/>
									<clip pos="1" side="tl" part="a_any_prn"/>
									<clip pos="1" side="tl" part="a_gen"/>
									<clip pos="1" side="tl" part="a_nbr"/>
									<clip pos="1" side="tl" part="a_cas"/>
								</lu>
							</chunk>
						</out>
					</otherwise>
				</choose>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- (prn.itg / adv.itg) -->
		<rule comment="RULE: ITG">
			<pattern>
				<pattern-item n="itg"/>
			</pattern>
			<action>
				<call-macro n="build_itg">
					<with-param pos="1"/>
				</call-macro>
				<out>
					<chunk name="itg" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="ITG"/></tag>
							<tag><var n="v_pers"/></tag>
							<tag><var n="v_gen"/></tag>
							<tag><var n="v_nbr"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_itg"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: REL">
			<pattern>
				<pattern-item n="rel_prn"/>
			</pattern>
			<action>
				<out>
					<chunk name="rel" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="REL"/></tag>  <!-- "PRN" -->
							<tag><var n="v_pers_prn"/></tag>
							<tag><var n="v_gen_prn"/></tag>
							<tag><var n="v_nbr_prn"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_rel"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: PRPERS">
			<pattern>
				<pattern-item n="prpers"/>
			</pattern>
			<action>
				<call-macro n="build_prpers">  <!-- OUT: v_..._prn -->
					<with-param pos="1"/>
				</call-macro>
				<out>
					<chunk name="prpers" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="PRPERS"/></tag>
							<tag><var n="v_pers_prn"/></tag>
							<tag><var n="v_gen_prn"/></tag>
							<tag><var n="v_nbr_prn"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_any_prn"/>
							<clip pos="1" side="tl" part="a_pers"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: PRPERS GEN NOM">
			<pattern>
				<pattern-item n="prpers_det"/>
				<pattern-item n="gen_nom"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_nom">
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="det_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_prpos"/>
							<clip pos="1" side="tl" part="a_pers"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<var n="v_cas_nom"/>    <!-- case from noun -->
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: PRPERS NOM's NOM">
			<pattern>
				<pattern-item n="prpers_det"/>
				<pattern-item n="nom"/>
				<pattern-item n="gen_n"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_nom">
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="det_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_prpos"/>
							<clip pos="1" side="tl" part="a_pers"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<var n="v_cas_nom"/>    <!-- case from noun -->
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<lit-tag v="gen"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: PRPERS ADJ NOM">
			<pattern>
				<pattern-item n="prpers"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_prn">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_adj_nom">
					<with-param pos="2"/>
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="prn_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_any_prn"/>
							<clip pos="1" side="tl" part="a_pers"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_adj"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: PRPERS NOM">
			<pattern>
				<pattern-item n="prpers_det"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="det_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_prpos"/>
							<clip pos="1" side="tl" part="a_pers"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>  <!-- case from noun -->
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: PRN NOUNS">
			<pattern>
				<pattern-item n="prn"/>
				<pattern-item n="noun"/>  <!-- "n"/"np" -->
			</pattern>
			<action>
				<call-macro n="build_det_nom"> <!-- OUT: v...det, v...nom -->
					<with-param pos="1"/>
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="det_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_any_prn"/>
							<clip pos="1" side="tl" part="a_pers"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>  <!--(case from noun)-->
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- (pl): "Mr Brown and Mrs Brown (are)" = "Herr Brown und Frau Brown (sind)" -->
		<rule comment="RULE: MR COG AND MRS COG">
			<pattern>
				<pattern-item n="mrs"/>
				<pattern-item n="cog_names"/>
				<pattern-item n="and"/>
				<pattern-item n="mrs"/>
				<pattern-item n="cog_names"/>
			</pattern>
			<action>
				<call-macro n="chg_default_nom">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_nom">
					<with-param pos="5"/>
				</call-macro>
				<out>
					<chunk name="nom_nom_cnj_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><lit-tag v="pl"/></tag>  <!-- "pl" -->
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
							<lit-tag v="nom"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="whole"/>
							<lit-tag v="nom"/>
						</lu>
						<b pos="4"/>
						<lu>
							<clip pos="5" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<let><var n="v_nbr_nom"/><lit-tag v="pl"/></let> <!-- propagate "pl" to verb -->
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- (pl): "Mr and Mrs Brown (are)" = "Herr und Frau Brown (sind)" -->
		<rule comment="RULE: MR AND MRS COG">
			<pattern>
				<pattern-item n="mrs"/>
				<pattern-item n="and"/>
				<pattern-item n="mrs"/>
				<pattern-item n="cog_names"/>
			</pattern>
			<action>
				<call-macro n="chg_default_nom">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_nom">
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="nom_cnj_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><lit-tag v="pl"/></tag>  <!-- "pl" -->
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
							<lit-tag v="nom"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
							<lit-tag v="nom"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<let><var n="v_nbr_nom"/><lit-tag v="pl"/></let> <!-- propagate "pl" to verb -->
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- add case for noun declension -->
		<rule comment="RULE: MRS COG">
			<pattern>
				<pattern-item n="mrs"/>
				<pattern-item n="cog_np"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_nom"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- (plural): "James and Mary Brown (are)" => "James und Mary Brown (sind)" -->
		<rule comment="RULE: NOUNS AND NOUNS COG">
			<pattern>
				<pattern-item n="noun"/>
				<pattern-item n="cnjcoo"/>  <!-- "and"/"or" -->
				<pattern-item n="noun"/>
				<pattern-item n="cog_names"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_nom">
					<with-param pos="3"/>
				</call-macro>
				<call-macro n="build_nom"> <!-- OUT: v...nom -->
					<with-param pos="4"/>
				</call-macro>
				<let><var n="v_nbr_nom"/><lit-tag v="pl"/></let> <!-- propagate "pl" to verb -->
				<out>
					<chunk name="nom_cnj_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lemh"/>
							<clip pos="1" side="tl" part="a_nom"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/> <!-- same case for both nouns -->
							<clip pos="1" side="tl" part="lemq"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- (plural): "Betty and her husband" => "Betty and ihr Ehemann" -->
		<rule comment="RULE: NOUNS AND DET NOUNS">
			<pattern>
				<pattern-item n="noun"/>
				<pattern-item n="cnjcoo"/>  <!-- "and"/"or" -->
				<pattern-item n="any_det"/>
				<pattern-item n="noun"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_det_nom"> <!-- OUT: v...nom -->
					<with-param pos="3"/>
					<with-param pos="4"/>
				</call-macro>
				<let><var n="v_nbr_nom"/><lit-tag v="pl"/></let> <!-- propagate "pl" to next verb -->
				<out>
					<chunk name="nom_cnj_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lemh"/>
							<clip pos="1" side="tl" part="a_nom"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/> <!-- same case for both nouns -->
							<clip pos="1" side="tl" part="lemq"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- (plural): "James and Mary (are)" => "James und Mary (sind)" -->
		<rule comment="RULE: NOUNS AND NOUNS">
			<pattern>
				<pattern-item n="noun"/>
				<pattern-item n="cnjcoo"/>  <!-- "and"/"or" -->
				<pattern-item n="noun"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_nom"> <!-- OUT: v...nom -->
					<with-param pos="3"/>
				</call-macro>
				<let><var n="v_nbr_nom"/><lit-tag v="pl"/></let> <!-- propagate "pl" to verb -->
				<out>
					<chunk name="nom_cnj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lemh"/>
							<clip pos="1" side="tl" part="a_nom"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/> <!-- same case for both nouns -->
							<clip pos="1" side="tl" part="lemq"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "the Smith Family"  =>  "die Familie Smith" -->
		<rule comment="RULE: DET COG FAMILY">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="names"/>
				<pattern-item n="family"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_nom">
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="det_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_det"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/> <!-- pos="2" -->
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!--  "of" deletion : "a glass of water" =} "ein Glas Wasser" -->
		<rule comment="RULE: DET NOM OF NOM">
			<pattern>
				<pattern-item n="any_det"/>
				<pattern-item n="nom"/>
				<pattern-item n="of"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="4"/>
				</call-macro>
				<call-macro n="build_det_nom"> <!-- called as last macro to set v...nom (send to verb) -->
					<with-param pos="1"/>
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="det_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!--  "of" deletion : "two gallons of petrol" =} "zwei Galonen Benzin" -->
		<rule comment="RULE: NUM NOM OF NOM">
			<pattern>
				<pattern-item n="num"/>
				<pattern-item n="nom"/>
				<pattern-item n="of"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_num">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="upd_pl_lem__sg_nbr_nom">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_nom">
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="det_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- the most expensive car => das teuerste Auto -->
		<rule comment="RULE: DET MOST ADJ NOM">
			<pattern>
				<pattern-item n="def_det"/>
				<pattern-item n="most"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_det_adj_nom">
					<with-param pos="1"/>
					<with-param pos="3"/>
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="det_adj" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="ADJ"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_det"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_adj"/>
							<lit-tag v="sup"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: DET ADJ GEN NOM">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="adj"/>
				<pattern-item n="gen_nom"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="3"/>
				</call-macro>
				<call-macro n="build_det_adj_nom">  <!-- OUT: v...nom -->
					<with-param pos="1"/>
					<with-param pos="2"/>
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="det_adj_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_det"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_adj"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: DET ADJ NOM's NOM">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
				<pattern-item n="gen_n"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="3"/>
				</call-macro>
				<call-macro n="build_det_adj_nom">  <!-- OUT: v...nom -->
					<with-param pos="1"/>
					<with-param pos="2"/>
					<with-param pos="5"/>
				</call-macro>
				<out>
					<chunk name="det_adj_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_det"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_adj"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<lit-tag v="gen"/>
						</lu>
						<b pos="4"/>
						<lu>
							<clip pos="5" side="tl" part="lemh"/>
							<clip pos="5" side="tl" part="a_nom"/>
							<clip pos="5" side="tl" part="a_gen"/>
							<clip pos="5" side="tl" part="a_nbr"/>
							<clip pos="5" side="tl" part="a_cas"/>
							<clip pos="5" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: DET ADJ ADJ NOM">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="adj"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_det_adj_nom">
					<with-param pos="1"/>
					<with-param pos="2"/>
					<with-param pos="4"/>
				</call-macro>
				<call-macro n="build_det_adj_nom">
					<with-param pos="1"/>
					<with-param pos="3"/>
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="det_adj_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_det"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_adj"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_adj"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: DET NUM ADJ NOM">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="num"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_det_adj_nom">
					<with-param pos="1"/>
					<with-param pos="3"/>
					<with-param pos="4"/>
				</call-macro>
				<call-macro n="build_num">
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="det_adj_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_det"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_adj"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: DET ADV ADJ NOM">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="adv"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_det_adj_nom">
					<with-param pos="1"/>
					<with-param pos="3"/>
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="det_adv_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_det"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_adj"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: DET DET ADJ NOM">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="det"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_det_adj_nom">
					<with-param pos="2"/>
					<with-param pos="3"/>
					<with-param pos="4"/>
				</call-macro>
				<call-macro n="build2_det"> <!-- IN: v...nom (of pos="4") -->
					<with-param pos="1"/>
				</call-macro>
				<out>
					<chunk name="det_det_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_det"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_det"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_adj"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: DET ADJ NOM">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_det_adj_nom">
					<with-param pos="1"/>
					<with-param pos="2"/>
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="det_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_det"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_adj"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: DET NUM NOM">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="num"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_det_nom">
					<with-param pos="1"/>
					<with-param pos="3"/>
				</call-macro>
				<call-macro n="build_num">
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="det_num_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: NUM NUM NOM">
			<pattern>
				<pattern-item n="num"/>
				<pattern-item n="num"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_num">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_num">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_nom">  <!-- OUT: v...nom -->
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="num_num_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: DET DET NOM">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="det"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_det_nom">
					<with-param pos="1"/>
					<with-param pos="3"/>
				</call-macro>
				<call-macro n="build2_det"> <!-- IN: v...nom (from "3") -->
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="det_det_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: DET GEN NOM">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="gen_nom"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_det_nom">
					<with-param pos="1"/>
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_nom"> <!-- OUT: v...nom -->
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="det_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: DET NOM's NOM">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="nom"/>
				<pattern-item n="gen_n"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_det_nom">
					<with-param pos="1"/>
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_nom"> <!-- OUT: v...nom -->
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="det_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<lit-tag v="gen"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: DET NOM NOM">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="nom"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_det_nom">  <!-- OUT: v...nom -->
					<with-param pos="1"/>
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="det_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: DET NOM-NOM">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="nom"/>
				<pattern-item n="hyphen"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_det_nom">  <!-- OUT: v...nom -->
					<with-param pos="1"/>
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="det_nom-nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
						</lu>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: DET NOM">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_det_nom">
					<with-param pos="1"/>
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="det_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- det+noun with predicative adjective -->
		<rule comment="RULE: DET NOM ADJ">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="nom"/>
				<pattern-item n="adj"/>
			</pattern>
			<action>
				<call-macro n="build_det_nom">
					<with-param pos="1"/>
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="det_nom_adj" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
							<lit-tag v="pred"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "daddy's very old raincoat" -->
		<rule comment="RULE: GEN ADV ADJ NOM">
			<pattern>
				<pattern-item n="gen_nom"/>
				<pattern-item n="adv"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_adj_nom">
					<with-param pos="3"/>
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="det_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_nom"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_adj"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "daddy's very old raincoat" -->
		<rule comment="RULE: NOM's ADV ADJ NOM">
			<pattern>
				<pattern-item n="nom"/>
				<pattern-item n="gen_n"/>
				<pattern-item n="adv"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_adj_nom">
					<with-param pos="4"/>
					<with-param pos="5"/>
				</call-macro>
				<out>
					<chunk name="det_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_nom"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<lit-tag v="gen"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lem"/>
							<clip pos="4" side="tl" part="a_adj"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="4"/>
						<lu>
							<clip pos="5" side="tl" part="lemh"/>
							<clip pos="5" side="tl" part="a_nom"/>
							<clip pos="5" side="tl" part="a_gen"/>
							<clip pos="5" side="tl" part="a_nbr"/>
							<clip pos="5" side="tl" part="a_cas"/>
							<clip pos="5" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "daddy's old raincoat" -->
		<rule comment="RULE: GEN ADJ NOM">
			<pattern>
				<pattern-item n="gen_nom"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_adj_nom">
					<with-param pos="2"/>
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="det_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_nom"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_adj"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "daddy's old raincoat" -->
		<rule comment="RULE: NOM's ADJ NOM">
			<pattern>
				<pattern-item n="nom"/>
				<pattern-item n="gen_n"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_adj_nom">
					<with-param pos="3"/>
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="det_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_nom"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<lit-tag v="gen"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_adj"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- predicative adjective -->
		<rule comment="RULE: NOM ADJ">
			<pattern>
				<pattern-item n="nom"/>
				<pattern-item n="adj"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="1"/>
				</call-macro>

				<choose>
					<when>
						<test>
							<equal>
								<clip pos="2" side="tl" part="a_adj"/>
								<lit-tag v="adj.sint.sup"/>
							</equal>
						</test>
						<out>
							<chunk name="nom_adj" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="SN"/></tag>
									<tag><var n="v_pers_nom"/></tag>
									<tag><var n="v_gen_nom"/></tag>
									<tag><var n="v_nbr_nom"/></tag>
									<tag><var n="v_cas_nom"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="lemh"/>
									<clip pos="1" side="tl" part="a_nom"/>
									<clip pos="1" side="tl" part="a_gen"/>
									<clip pos="1" side="tl" part="a_nbr"/>
									<clip pos="1" side="tl" part="a_cas"/>
									<clip pos="1" side="tl" part="lemq"/>
								</lu>
								<b pos="1"/>
								<lu>
									<lit v="am"/>  <!--"dat"-->
									<lit-tag v="pr"/>
								</lu>
								<b pos="1"/>
								<lu>
									<clip pos="2" side="tl" part="lem"/>
									<clip pos="2" side="tl" part="a_adj"/>
									<lit-tag v="pred"/>
								</lu>
							</chunk>
						</out>
					</when>
					
					<otherwise>
						<out>
							<chunk name="nom_adj" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="SN"/></tag>
									<tag><var n="v_pers_nom"/></tag>
									<tag><var n="v_gen_nom"/></tag>
									<tag><var n="v_nbr_nom"/></tag>
									<tag><var n="v_cas_nom"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="lem"/>
									<clip pos="1" side="tl" part="a_nom"/>
									<clip pos="1" side="tl" part="a_gen"/>
									<clip pos="1" side="tl" part="a_nbr"/>
									<clip pos="1" side="tl" part="a_cas"/>
								</lu>
								<b pos="1"/>
								<lu>
									<clip pos="2" side="tl" part="lem"/>
									<clip pos="2" side="tl" part="a_adj"/>
									<lit-tag v="pred"/>
								</lu>
							</chunk>
						</out>
					</otherwise>
				</choose>

				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: ADJ CNJ ADJ NOM">
			<pattern>
				<pattern-item n="adj"/>
				<pattern-item n="conj"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_adj_nom">  <!-- OUT: v...nom -->
					<with-param pos="3"/>
					<with-param pos="4"/>
				</call-macro>
				<call-macro n="build2_adj">  <!-- IN: v...nom -->
					<with-param pos="1"/>
				</call-macro>
				<out>
					<chunk name="adj_cnj_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_adj"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
							<clip pos="1" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_adj"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: ADJ CM ADJ NOM">
			<pattern>
				<pattern-item n="adj"/>
				<pattern-item n="coma"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_adj_nom">  <!-- OUT: v...nom -->
					<with-param pos="3"/>
					<with-param pos="4"/>
				</call-macro>
				<call-macro n="build2_adj">  <!-- IN: v...nom -->
					<with-param pos="1"/>
				</call-macro>
				<out>
					<chunk name="adj_cm_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_adj"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
							<clip pos="1" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_adj"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: ADJ ADJ NOM">
			<pattern>
				<pattern-item n="adj"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_adj_nom">  <!-- OUT: v...nom -->
					<with-param pos="2"/>
					<with-param pos="3"/>
				</call-macro>
				<call-macro n="build2_adj">  <!-- IN: v...nom -->
					<with-param pos="1"/>
				</call-macro>
				<out>
					<chunk name="adj_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_adj"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
							<clip pos="1" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_adj"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: ADV ADJ NOM">
			<pattern>
				<pattern-item n="adv"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_adj_nom">  <!-- OUT: v...nom -->
					<with-param pos="2"/>
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="adv_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_adj"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: NUM ADJ NOM">
			<pattern>
				<pattern-item n="num"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_num">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_adj_nom">  <!-- OUT: v...nom -->
					<with-param pos="2"/>
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="num_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_adj"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: ADJ NOM NOM">
			<pattern>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_adj_nom">  <!-- OUT: v...nom -->
					<with-param pos="1"/>
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="adj_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_adj"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
							<clip pos="1" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: NUM NOM NOM">
			<pattern>
				<pattern-item n="num"/>
				<pattern-item n="nom"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_num">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_nom">
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="num_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: ADJ NOM-NOM">
			<pattern>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
				<pattern-item n="hyphen"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_adj_nom">  <!-- OUT: v...nom -->
					<with-param pos="1"/>
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="adj_nom-nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_adj"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: NUM NOM-NOM">
			<pattern>
				<pattern-item n="num"/>
				<pattern-item n="nom"/>
				<pattern-item n="hyphen"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_num">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_nom">
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="num_nom-nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: ADJ NOM">
			<pattern>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_adj_nom">  <!-- OUT: v...nom -->
					<with-param pos="1"/>
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_adj"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
							<clip pos="1" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: NUM NOM">
			<pattern>
				<pattern-item n="num"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_num">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_nom">  <!-- OUT: v...nom -->
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="num_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: NOM NOM">
			<pattern>
				<pattern-item n="nom"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_nom">  <!-- OUT: v...nom -->
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lemh"/>
							<clip pos="1" side="tl" part="a_nom"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
							<clip pos="1" side="tl" part="lemq"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: NOM's NOM">
			<pattern>
				<pattern-item n="nom"/>
				<pattern-item n="gen_n"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_nom">  <!-- OUT: v...nom -->
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_nom"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<lit-tag v="gen"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- add case for German noun declension -->
		<rule comment="RULE: NOM">
			<pattern>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">  <!-- OUT: v...nom -->
					<with-param pos="1"/>
				</call-macro>
				<out>
					<chunk name="nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lemh"/>
							<clip pos="1" side="tl" part="a_nom"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
							<clip pos="1" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: ADJ CONJ ADJ">
			<pattern>
				<pattern-item n="adj"/>
				<pattern-item n="conj"/>
				<pattern-item n="adj"/>
			</pattern>
			<action>
				<call-macro n="build_adj">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_adj">
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="adj_cnj_adj" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="ADJ"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_adj"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_adj"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- more expensive => teurer -->
		<!-- conversion : English analytic to German synthetic adjective -->
		<rule comment="RULE: MORE ADJ">
			<pattern>
				<pattern-item n="more"/>
				<pattern-item n="adj"/>
			</pattern>
			<action>
				<call-macro n="build_adj">
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="adv_adj" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="ADJ"/></tag>
						</tags>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
							<lit-tag v="comp"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- most expensive => am teuersten -->
		<rule comment="RULE: MOST ADJ">
			<pattern>
				<pattern-item n="most"/>
				<pattern-item n="adj"/>
			</pattern>
			<action>
				<call-macro n="build_adj">
					<with-param pos="2"/>
				</call-macro>
				<!--<call-macro n="chg_more_most_a_adj">
					<with-param pos="2"/>
				</call-macro>-->
				<out>
					<chunk name="adv_adj" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="ADJ"/></tag>
						</tags>
						<lu>
							<lit v="am"/>  <!--"dat"-->
							<lit-tag v="pr"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<lit-tag v="adj.sint.sup.nt.sg.dat.mix"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: DET ADJ">
			<pattern>
				<pattern-item n="det"/>
				<pattern-item n="adj"/>
			</pattern>
			<action>
				<call-macro n="build_det">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="set_decl_a_adj">
					<with-param pos="2"/>  <!-- adj -->
					<with-param pos="1"/>  <!-- det -->
				</call-macro>
				<out>
					<chunk name="det_adj" case="caseFirstWord">
						<tags>
							<!--<tag><lit-tag v="SA"/></tag>-->
							<tag><lit-tag v="SN"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_adj"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="a_adj_typ"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: ADV ADJ">
			<pattern>
				<pattern-item n="adv"/>
				<pattern-item n="adj"/>
			</pattern>
			<action>
				<call-macro n="build_adj">  <!-- OUT: v_a_adj -->
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="adv_adj" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="ADJ"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_adj"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- ADJ ~ADV => ~ADV ADJ -->
		<rule comment="RULE: ADJ ADV">
			<pattern>
				<pattern-item n="adj"/>
				<pattern-item n="adv"/>
			</pattern>
			<action>
				<call-macro n="build_adj">  <!-- OUT: v_a_adj -->
					<with-param pos="1"/>
				</call-macro>
				<modify-case>
					<clip pos="1" side="tl" part="lem"/>
					<lit v="aa"/>
				</modify-case>
				<out>
					<chunk name="adv_adj" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="ADJ"/></tag>
						</tags>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_adj"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: ADJ">
			<pattern>
				<pattern-item n="adj"/>
			</pattern>
			<action>
				<call-macro n="build_adj">  <!-- OUT: v_a_adj -->
					<with-param pos="1"/>
				</call-macro>
				<out>
					<chunk name="adj" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="ADJ"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_adj"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: NUM">
			<pattern>
				<pattern-item n="num"/>
			</pattern>
			<action>
				<call-macro n="build_num">
					<with-param pos="1"/>
				</call-macro>
				<out>
					<chunk name="num" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="NUM"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- preposition with dative -->
		<rule comment="RULE: PRDAT DET ADJ ADJ NOM">
			<pattern>
				<pattern-item n="dat_prep"/>
				<pattern-item n="det"/>
				<pattern-item n="adj"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<let><var n="v_cas_prep"/><lit-tag v="dat"/></let> <!-- dative -->
				<call-macro n="build_det_adj_nom">
					<with-param pos="2"/>
					<with-param pos="4"/>
					<with-param pos="5"/>
				</call-macro>
				<call-macro n="build2_adj"> <!-- IN: v...nom (pos="5") -->
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="pr_det_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_det"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_adj"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="a_adj_typ"/> <!-- use same type as "4" -->
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lem"/>
							<clip pos="4" side="tl" part="a_adj"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="4"/>
						<lu>
							<clip pos="5" side="tl" part="lemh"/>
							<clip pos="5" side="tl" part="a_nom"/>
							<clip pos="5" side="tl" part="a_gen"/>
							<clip pos="5" side="tl" part="a_nbr"/>
							<clip pos="5" side="tl" part="a_cas"/>
							<clip pos="5" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- preposition with accusative -->
		<rule comment="RULE: PRACC DET ADJ ADJ NOM">
			<pattern>
				<pattern-item n="acc_prep"/>
				<pattern-item n="det"/>
				<pattern-item n="adj"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<let><var n="v_cas_prep"/><lit-tag v="acc"/></let> <!-- accusative -->
				<call-macro n="build_det_adj_nom">
					<with-param pos="2"/>
					<with-param pos="4"/>
					<with-param pos="5"/>
				</call-macro>
				<call-macro n="build2_adj"> <!-- IN: v...nom -->
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="pr_det_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_det"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_adj"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="a_adj_typ"/> <!-- use same type as "4" -->
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lem"/>
							<clip pos="4" side="tl" part="a_adj"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="4"/>
						<lu>
							<clip pos="5" side="tl" part="lemh"/>
							<clip pos="5" side="tl" part="a_nom"/>
							<clip pos="5" side="tl" part="a_gen"/>
							<clip pos="5" side="tl" part="a_nbr"/>
							<clip pos="5" side="tl" part="a_cas"/>
							<clip pos="5" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "from the 3rd of June"  =>  "(vom=) von dem 3. Juni" -->
		<!-- PR DET NUM OF MONTHS  => PR DET NUM MONTHS -->
		<!-- preposition with dative -->
		<rule comment="RULE: PRDAT DET NUM OF NOM">
			<pattern>
				<pattern-item n="dat_prep"/>
				<pattern-item n="det"/>
				<pattern-item n="num"/>
				<pattern-item n="prep"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<let><var n="v_cas_prep"/><lit-tag v="dat"/></let> <!-- dative -->
				<call-macro n="build_det_nom">
					<with-param pos="2"/>
					<with-param pos="5"/>
				</call-macro>
				<call-macro n="build_num">
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="pr_det_num_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="5" side="tl" part="lemh"/>
							<clip pos="5" side="tl" part="a_nom"/>
							<clip pos="5" side="tl" part="a_gen"/>
							<clip pos="5" side="tl" part="a_nbr"/>
							<clip pos="5" side="tl" part="a_cas"/>
							<clip pos="5" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- preposition with dative -->
		<rule comment="RULE: PRDAT DET ADJ NOM">
			<pattern>
				<pattern-item n="dat_prep"/>
				<pattern-item n="det"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<let><var n="v_cas_prep"/><lit-tag v="dat"/></let> <!-- dative -->
				<call-macro n="build_det_adj_nom">
					<with-param pos="2"/>
					<with-param pos="3"/>
					<with-param pos="4"/>
				</call-macro>

				<out>
					<chunk name="pr_det_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_det"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_adj"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- preposition with accusative -->
		<rule comment="RULE: PRACC DET ADJ NOM">
			<pattern>
				<pattern-item n="acc_prep"/>
				<pattern-item n="det"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<let><var n="v_cas_prep"/><lit-tag v="acc"/></let> <!-- accusative -->
				<call-macro n="build_det_adj_nom">
					<with-param pos="2"/>
					<with-param pos="3"/>
					<with-param pos="4"/>
				</call-macro>

				<out>
					<chunk name="pr_det_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_det"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_adj"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- preposition with dative -->
		<rule comment="RULE: PRDAT DET NUM NOM">
			<pattern>
				<pattern-item n="dat_prep"/>
				<pattern-item n="det"/>
				<pattern-item n="num"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<let><var n="v_cas_prep"/><lit-tag v="dat"/></let> <!-- dative -->
				<call-macro n="build_det_nom">
					<with-param pos="2"/>
					<with-param pos="4"/>
				</call-macro>
				<call-macro n="build_num">
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="pr_det_num_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- preposition with dative -->
		<rule comment="RULE: PRDAT DET NOM">
			<pattern>
				<pattern-item n="dat_prep"/>
				<pattern-item n="det"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<let><var n="v_cas_prep"/><lit-tag v="dat"/></let> <!-- dative -->
				<call-macro n="build_det_nom">
					<with-param pos="2"/>
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="pr_det_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- preposition with accusative -->
		<rule comment="RULE: PRACC DET NOM">
			<pattern>
				<pattern-item n="acc_prep"/>
				<pattern-item n="det"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<let><var n="v_cas_prep"/><lit-tag v="acc"/></let> <!-- accusative -->
				<call-macro n="build_det_nom">
					<with-param pos="2"/>
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="pr_det_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- preposition with dative -->
		<rule comment="RULE: PRDAT PRPERS NOM">
			<pattern>
				<pattern-item n="dat_prep"/>
				<pattern-item n="prpers_det"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<let><var n="v_cas_prep"/><lit-tag v="dat"/></let> <!-- dative -->
				<call-macro n="build_nom">
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="pr_det_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_prpos"/>
							<clip pos="2" side="tl" part="a_pers"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/> <!-- from noun -->
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- preposition with genitive -->
		<rule comment="RULE: PRGEN DET NOM">
			<pattern>
				<pattern-item n="gen_prep"/>
				<pattern-item n="any_det"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<let><var n="v_cas_prep"/><lit-tag v="gen"/></let> <!-- genitive -->
				<call-macro n="build_det_nom"> <!-- OUT: v...nom -->
					<with-param pos="2"/>
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="pr_det_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_any_det"/>
							<clip pos="2" side="tl" part="a_pers"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/> <!-- from noun -->
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "to London" => "nach London" -->
		<!-- "to" LOC => "nach" LOC -->
		<rule comment="RULE: TO LOC">  <!-- "PR NOM" -->
			<pattern>
				<pattern-item n="to"/>
				<pattern-item n="location"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="pr_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<lit v="nach"/>
							<clip pos="1" side="tl" part="a_pr"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "in London" => "in London" -->
		<rule comment="RULE: PR NOM">
			<pattern>
				<pattern-item n="prep"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="pr_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: PR NOM's NOM">
			<pattern>
				<pattern-item n="prep"/>
				<pattern-item n="nom"/>
				<pattern-item n="gen_n"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_nom"> <!-- OUT: v...nom -->
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="pr_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_pr"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<lit-tag v="gen"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- PR with accusative (if not already dative) -->
		<rule comment="RULE: PR DET NOM">
			<pattern>
				<pattern-item n="prep"/>
				<pattern-item n="det"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="set_acc_cas_nom">  <!--set accusative -->
					<with-param pos="3"/>
				</call-macro>
				<let><var n="v_cas_prep"/><var n="v_cas_nom"/></let> 
				<call-macro n="build_det_nom">
					<with-param pos="2"/>
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="pr_det_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: PR DET GEN NOM">
			<pattern>
				<pattern-item n="prep"/>
				<pattern-item n="det"/>
				<pattern-item n="gen_nom"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_det_nom"> <!-- OUT: v...det, v...nom -->
					<with-param pos="2"/>
					<with-param pos="3"/>
				</call-macro>
				<call-macro n="build_nom"> <!-- OUT: v...nom -->
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="pr_det_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_pr"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: PR DET NOM's NOM">
			<pattern>
				<pattern-item n="prep"/>
				<pattern-item n="det"/>
				<pattern-item n="nom"/>
				<pattern-item n="gen_n"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_det_nom"> <!-- OUT: v...det, v...nom -->
					<with-param pos="2"/>
					<with-param pos="3"/>
				</call-macro>
				<call-macro n="build_nom"> <!-- OUT: v...nom -->
					<with-param pos="5"/>
				</call-macro>
				<out>
					<chunk name="pr_det_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_pr"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<lit-tag v="gen"/>
						</lu>
						<b pos="4"/>
						<lu>
							<clip pos="5" side="tl" part="lemh"/>
							<clip pos="5" side="tl" part="a_nom"/>
							<clip pos="5" side="tl" part="a_gen"/>
							<clip pos="5" side="tl" part="a_nbr"/>
							<clip pos="5" side="tl" part="a_cas"/>
							<clip pos="5" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- PR with accusative (if not already dative) -->
		<rule comment="RULE: PR DET NOM NOM">
			<pattern>
				<pattern-item n="prep"/>
				<pattern-item n="det"/>
				<pattern-item n="nom"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="3"/>
				</call-macro>
				<call-macro n="set_acc_cas_nom">  <!--set accusative -->
					<with-param pos="4"/>
				</call-macro>
				<let><var n="v_cas_prep"/><var n="v_cas_nom"/></let> 
				<call-macro n="build_det_nom">
					<with-param pos="2"/>
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="pr_det_nom_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: PR DET ADJ NOM">
			<pattern>
				<pattern-item n="prep"/>
				<pattern-item n="det"/>
				<pattern-item n="adj"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="set_dat_cas_nom">  <!--set dative -->
					<with-param pos="4"/>
				</call-macro>
				<let><var n="v_cas_prep"/><var n="v_cas_nom"/></let> <!-- dative -->
				<call-macro n="build_det_adj_nom">
					<with-param pos="2"/>
					<with-param pos="3"/>
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="pr_det_adj_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_pr"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_det"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_adj"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="a_adj_typ"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "for four hours" => "für vier Stunden" -->
		<rule comment="RULE: PR NUM NOM">
			<pattern>
				<pattern-item n="prep"/>
				<pattern-item n="num"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_num">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_nom">  <!-- OUT: v...nom -->
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="pr_num_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "at ten past nine" => "um zehn nach neun" -->
		<rule comment="RULE: PR NUM PR NUM">
			<pattern>
				<pattern-item n="prep"/>
				<pattern-item n="num"/>
				<pattern-item n="prep"/>
				<pattern-item n="num"/>
			</pattern>
			<action>
				<call-macro n="build_num">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_num">
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="pr_num_pr_num" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "at ten" => "um zehn" -->
		<rule comment="RULE: PR NUM">
			<pattern>
				<pattern-item n="prep"/>
				<pattern-item n="num"/>
			</pattern>
			<action>
				<call-macro n="build_num">
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="pr_num" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "until half" => "bis halb" -->
		<rule comment="RULE: PR ADJ">
			<pattern>
				<pattern-item n="prep"/>
				<pattern-item n="adj"/>
			</pattern>
			<action>
				<call-macro n="build_adj">
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="pr_adj" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="ADJ"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_adj"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: PR">
			<pattern>
				<pattern-item n="prep"/>
			</pattern>
			<action>
				<let><var n="v_firstWord_qst"/><lit v=""/></let>
				<out>
					<chunk name="pr" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="PR"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: DET">
			<pattern>
				<pattern-item n="det"/>
			</pattern>
			<action>
				<call-macro n="build2_det">
					<with-param pos="1"/>
				</call-macro>
				<out>
					<chunk name="det" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="DET"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
							<!--<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_det"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>-->
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- ten years ago  =>  vor zehn Jahren -->
		<!-- NUM PERIODS ~ADV => ~ADV NUM PERIODS -->
		<rule comment="RULE: NUM PERIODS ADV">
			<pattern>
				<pattern-item n="num"/>
				<pattern-item n="periods"/>
				<pattern-item n="adv"/>
			</pattern>
			<action>
				<call-macro n="build_num">
					<with-param pos="1"/>
				</call-macro>
				<let><var n="v_cas_prep"/><lit-tag v="dat"/></let> <!-- dative -->
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<modify-case>
					<clip pos="1" side="tl" part="lem"/>
					<lit v="aa"/>
				</modify-case>
				<out>
					<chunk name="adv_num_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- on June the thirty-first  =>  am einunddreißigsten Juni -->
		<!-- PR ~MONTHS DET NUM-NUM => PR DET NUM ~MONTHS -->
		<rule comment="RULE: PR MONTHS DET NUM-NUM">
			<pattern>
				<pattern-item n="prep"/>
				<pattern-item n="months"/>
				<pattern-item n="det"/>
				<pattern-item n="num"/>
				<pattern-item n="hyphen"/>
				<pattern-item n="ord_num"/>
			</pattern>
			<action>
				<let><var n="v_cas_prep"/><lit-tag v="dat"/></let> <!-- dative -->
				<call-macro n="build_det_nom">
					<with-param pos="3"/>  <!-- det -->
					<with-param pos="2"/>  <!-- nom -->
				</call-macro>
				<call-macro n="build_num">
					<with-param pos="6"/>
				</call-macro>
				<out>
					<chunk name="pr_det_num-num" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<lit v="an"/>
							<clip pos="1" side="tl" part="a_pr"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="4" side="tl" part="whole"/>
						</lu>
						<lu>
							<clip pos="5" side="tl" part="whole"/>
						</lu>
						<lu>
							<clip pos="6" side="tl" part="whole"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- on June the third  =>  am dritten Juni -->
		<!-- PR ~MONTHS DET NUM  =>  PR DET NUM ~MONTHS -->
		<rule comment="RULE: PR MONTHS DET NUM">
			<pattern>
				<pattern-item n="prep"/>
				<pattern-item n="months"/>
				<pattern-item n="det"/>
				<pattern-item n="ord_num"/>
			</pattern>
			<action>
				<let><var n="v_cas_prep"/><lit-tag v="dat"/></let> <!-- dative -->
				<call-macro n="build_det_nom">
					<with-param pos="3"/>
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_num">
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="pr_det_num_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<lit v="an"/>
							<clip pos="1" side="tl" part="a_pr"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="4" side="tl" part="whole"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- June the third  =>  der dritte Juni -->
		<!-- ~MONTHS DET NUM => DET NUM ~MONTHS -->
		<rule comment="RULE: MONTHS DET NUM">
			<pattern>
				<pattern-item n="months"/>
				<pattern-item n="det"/>
				<pattern-item n="ord_num"/>
			</pattern>
			<action>
				<call-macro n="build_det_nom">
					<with-param pos="2"/>  <!-- "det" -->
					<with-param pos="1"/>  <!-- "nom" -->
				</call-macro>
				<out>
					<chunk name="det_num_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_nom"/>
							<clip pos="1" side="tl" part="a_gen"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="1" side="tl" part="a_cas"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "Wednesday , April 5th"  =>  "Mittwoch der 5. April" -->
		<!-- WEEKS CM ~MONTHS NUM => WEEKS +DET NUM ~MONTHS -->
		<rule comment="RULE: WEEKS CM MONTHS NUM">
			<pattern>
				<pattern-item n="weekdays"/>
				<pattern-item n="coma"/>
				<pattern-item n="months"/>
				<pattern-item n="ord_num"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="3"/>
				</call-macro>
				<call-macro n="build_nom">  <!--(pos="1" last) OUT: v...nom -->
					<with-param pos="1"/>
				</call-macro>
				<out>
					<chunk name="nom_det_num_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b/>
						<lu>
							<lit v="der"/>
							<lit-tag v="det.def.m.sg.nom"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="4" side="tl" part="lem"/>
							<clip pos="4" side="tl" part="a_ord_num"/>
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "on August 24th"  =>  "am 24. August" -->
		<!-- ON ~MONTHS NUM  =>  ON NUM ~MONTHS -->
		<rule comment="RULE: ON MONTHS NUM">
			<pattern>
				<pattern-item n="on"/>
				<pattern-item n="months"/>
				<pattern-item n="ord_num"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="build_num">
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="pr_num_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<lit v="am"/>
							<lit-tag v="pr"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
						</lu>
						<b pos="2"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "3rd of June"  =>  "3. Juni" -->
		<!-- NUM OF MONTHS  =>  NUM MONTHS -->
		<rule comment="RULE: NUM OF MONTHS">
			<pattern>
				<pattern-item n="ord_num"/>
				<pattern-item n="of"/>
				<pattern-item n="months"/>
			</pattern>
			<action>
				<call-macro n="build_num">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_nom">
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="num_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="3" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "August 24th"  =>  "24. August" -->
		<!-- ~MONTHS NUM  =>  NUM ~MONTHS -->
		<rule comment="RULE: MONTHS NUM">
			<pattern>
				<pattern-item n="months"/>
				<pattern-item n="ord_num"/>
			</pattern>
			<action>
				<call-macro n="build_nom">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_num">
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="num_nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: PLAY DET NOM">
			<pattern>
				<pattern-item n="play"/>
				<pattern-item n="det"/>
				<pattern-item n="nom_det_deletion"/>
			</pattern>
			<action>
				<call-macro n="build_verb"> <!-- OUT: v...verb -->
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_det_nom">
					<with-param pos="2"/>
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="verb" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SV"/></tag>
							<tag><var n="v_tense_verb"/></tag>
							<tag><var n="v_pers_verb"/></tag>
							<tag><var n="v_nbr_verb"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lemh"/>
							<clip pos="1" side="tl" part="a_verb"/>
							<clip pos="1" side="tl" part="a_tense" link-to="2"/>
							<clip pos="1" side="tl" part="a_pers" link-to="3"/>
							<clip pos="1" side="tl" part="a_nbr" link-to="4"/>
							<clip pos="1" side="tl" part="lemq"/>
						</lu>
					</chunk>
					<b pos="2"/>
					<chunk name="nom" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_nom"/>
							<clip pos="3" side="tl" part="a_gen"/>
							<clip pos="3" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="a_cas"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!--  "can you see" ==> "kannst du (...) sehen" -->
		<rule comment="RULE: VERBM PRPERS VERBS">
			<pattern>
				<pattern-item n="verb-mod"/>
				<pattern-item n="prpers_subj"/>
				<pattern-item n="verbs"/>
			</pattern>
			<action>
				<call-macro n="build_prpers">  <!-- OUT: v_..._prn -->
					<with-param pos="2"/>  <!-- execute first to propagate pers/nbr to verb -->
				</call-macro>
				<call-macro n="upd_inf_pri_tense"> <!-- if "inf" change to "pri" -->
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_verb"> <!-- OUT: v...verb -->
					<with-param pos="1"/>
				</call-macro>
				<out>
					<chunk name="verbm" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SV_aux"/></tag>
							<tag><var n="v_tense_verb"/></tag>
							<tag><var n="v_pers_verb"/></tag>
							<tag><var n="v_nbr_verb"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_verb"/>
							<clip pos="1" side="tl" part="a_tense" link-to="2"/>
							<clip pos="1" side="tl" part="a_pers" link-to="3"/>
							<clip pos="1" side="tl" part="a_nbr" link-to="4"/>
						</lu>
					</chunk>
					<b pos="1"/>
					<chunk name="prpers" case="caseOtherWord">
						<tags>
							<tag><lit-tag v="PRPERS"/></tag>
							<tag><var n="v_pers_prn"/></tag>
							<tag><var n="v_gen_prn"/></tag>
							<tag><var n="v_nbr_prn"/></tag>
						</tags>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_any_prn"/>
							<clip pos="2" side="tl" part="a_pers"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
						</lu>
					</chunk>
					<b pos="2"/>
					<chunk name="verb" case="caseOtherWord">
						<tags>
							<tag><lit-tag v="SV"/></tag>
							<tag><lit-tag v="inf"/></tag>
						</tags>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_verb"/>
							<lit-tag v="inf"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!--  "Are you going to buy" ==> "Werden Sie (...) kaufen" -->
		<!--  "BE PRPERS GO TO VERB" => "+werden PRPERS VERB" -->
		<rule comment="RULE: BE PRPERS GO TO VERB">
			<pattern>
				<pattern-item n="verbbe"/>
				<pattern-item n="prpers_pers"/>
				<pattern-item n="go"/>
				<pattern-item n="to"/>
				<pattern-item n="verbs"/>
			</pattern>
			<action>
				<call-macro n="build_verb"> <!-- OUT: v...verb -->
					<with-param pos="1"/>
				</call-macro>
				<let><clip pos="5" side="tl" part="a_tense"/><lit-tag v="inf"/></let>
				<call-macro n="build_verb2">
					<with-param pos="5"/>
				</call-macro>
				<choose>
					<when>
						<test>
							<equal caseless="yes">
								<clip pos="2" side="tl" part="lem"/>
								<lit v="prpers"/>
							</equal>
						</test>
						<call-macro n="build_prpers">  <!-- OUT: v_..._prn -->
							<with-param pos="2"/>
						</call-macro>
					</when>
					<otherwise>
						<call-macro n="build_prn">  <!-- OUT: v_..._prn -->
							<with-param pos="2"/>
						</call-macro>
					</otherwise>
				</choose>
				<out>
					<chunk name="verbm" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SV_aux"/></tag>
							<tag><var n="v_tense_verb"/></tag>
							<tag><var n="v_pers_verb"/></tag>
							<tag><var n="v_nbr_verb"/></tag>
						</tags>
						<lu>
							<lit v="werden"/>  <!-- "will" -->
							<lit-tag v="vaux"/>
							<clip pos="1" side="tl" part="a_tense" link-to="2"/>
							<clip pos="1" side="tl" part="a_pers" link-to="3"/>
							<clip pos="1" side="tl" part="a_nbr" link-to="4"/>
						</lu>
					</chunk>
					<b pos="1"/>
					<chunk name="prpers" case="caseOtherWord">
						<tags>
							<tag><lit-tag v="PRPERS"/></tag>
							<tag><var n="v_pers_prn"/></tag>
							<tag><var n="v_gen_prn"/></tag>
							<tag><var n="v_nbr_prn"/></tag>
						</tags>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_any_prn"/>
							<clip pos="2" side="tl" part="a_pers"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
						</lu>
					</chunk>
					<b pos="4"/>
					<chunk name="verb" case="caseOtherWord">
						<tags>
							<tag><lit-tag v="SV"/></tag>
							<tag><lit-tag v="inf"/></tag>
						</tags>
						<lu>
							<clip pos="5" side="tl" part="lemh"/>
							<clip pos="5" side="tl" part="a_verb"/>
							<lit-tag v="inf"/>
							<clip pos="5" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!--  "(he) is going to do" ==> "(er) will tun" -->
		<!--  "BE GO TO VERB" => "+wollen VERB" -->
		<rule comment="RULE: BE GO TO VERB">
			<pattern>
				<pattern-item n="verbbe"/>
				<pattern-item n="go"/>
				<pattern-item n="to"/>
				<pattern-item n="verbs"/>
			</pattern>
			<action>
				<call-macro n="build_verb"> <!-- OUT: v...verb -->
					<with-param pos="1"/>
				</call-macro>
				<let><clip pos="4" side="tl" part="a_tense"/><lit-tag v="inf"/></let>
				<call-macro n="build_verb2">
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="verbm" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SV_aux"/></tag>
							<tag><var n="v_tense_verb"/></tag>
							<tag><var n="v_pers_verb"/></tag>
							<tag><var n="v_nbr_verb"/></tag>
						</tags>
						<lu>
							<lit v="wollen"/>  <!-- "will" -->
							<lit-tag v="vbmod"/>
							<clip pos="1" side="tl" part="a_tense" link-to="2"/>
							<clip pos="1" side="tl" part="a_pers" link-to="3"/>
							<clip pos="1" side="tl" part="a_nbr" link-to="4"/>
						</lu>
					</chunk>
					<b pos="3"/>
					<chunk name="verb" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SV"/></tag>
							<tag><lit-tag v="inf"/></tag>
						</tags>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_verb"/>
							<lit-tag v="inf"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!--  "BE there" => "SEIN dort" / (nbr from verb) -->
		<rule comment="RULE: BE THERE">
			<pattern>
				<pattern-item n="verbbe"/>
				<pattern-item n="there"/>
			</pattern>
			<action>
				<let><var n="v_pers_noun"/><lit v=""/></let>
				<let><var n="v_nbr_noun"/><lit v=""/></let>
				<call-macro n="build_verb"> <!-- OUT: v...verb -->
					<with-param pos="1"/>
				</call-macro>
				<out>
					<chunk name="verbm" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SV_aux"/></tag>
							<tag><var n="v_tense"/></tag>
							<tag><var n="v_pers"/></tag>
							<tag><var n="v_nbr"/></tag>  <!--(use the tag, not "ND")-->
							<tag><var n="v_info"/></tag> <!--(for additional outputs if avaiable)-->
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_verb"/>
							<clip pos="1" side="tl" part="a_tense" link-to="2"/>
							<clip pos="1" side="tl" part="a_pers" link-to="3"/>
							<clip pos="1" side="tl" part="a_nbr" link-to="4"/>
						</lu>
					</chunk>
					<b pos="1"/>
					<chunk name="adv" case="caseOtherWord">
						<tags>
							<tag><lit-tag v="ADV"/></tag>
						</tags>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "(he) is going into" => "(er) geht (...) hinein" --> <!-- separable verb -->
		<rule comment="RULE: BE VERBS / BE VERBS+ATP">
			<pattern>
				<pattern-item n="verbbe"/> <!-- vbser -->
				<pattern-item n="verbs"/>
			</pattern>
			<action>
				<call-macro n="build_verb"> <!-- OUT: v...verb -->
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_verb2">
					<with-param pos="2"/>
				</call-macro>
				<let><var n="v_predicate"/><clip pos="2" side="tl" part="a_verb1"/></let>

				<let><var n="v_lemq_verb"/><clip pos="2" side="tl" part="lemq"/></let>
				<choose>
					<when>  <!-- atp in lemq -->
						<test>
							<and>
								<not>
									<equal>
										<var n="v_lemq_verb"/>
										<lit v=""/>
									</equal>
								</not>
								<equal>
									<clip pos="2" side="tl" part="a_sep_verb1"/>
									<lit-tag v="vblex.sep"/>
								</equal>
							</and>
						</test>
						<call-macro n="rm_sep_a_verb">  <!-- remove <sep> tag from verb -->
							<with-param pos="2"/>
						</call-macro>
						<out>
							<chunk name="verb" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="SV"/></tag>
									<tag><var n="v_tense_verb"/></tag>  <!-- converted tense tag -->
									<tag><var n="v_pers_verb"/></tag>
									<tag><var n="v_nbr_verb"/></tag>
								</tags>
								<lu>
									<clip pos="2" side="tl" part="lemh"/>
									<clip pos="2" side="tl" part="a_verb"/>
									<clip pos="1" side="tl" part="a_tense" link-to="2"/>
									<clip pos="1" side="tl" part="a_pers" link-to="3"/>
									<clip pos="1" side="tl" part="a_nbr" link-to="4"/>
								</lu>
							</chunk>
							<b pos="1"/>
							<chunk name="prep" case="caseOtherWord"> <!-- "lemq" -->
								<tags>
									<tag><lit-tag v="PR"/></tag>
									<tag><lit-tag v="atp"/></tag>
								</tags>
								<lu>
									<clip pos="2" side="tl" part="lemq"/> <!-- separable prefix -->
									<lit-tag v="atp"/>
								</lu>
							</chunk>
						</out>
					</when>

					<when>
						<test>
							<equal>
								<clip pos="2" side="tl" part="a_tense"/>
								<lit-tag v="pp"/>
							</equal>
						</test>
						<out>
							<chunk name="verb_verb" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="SV"/></tag>
									<tag><var n="v_tense_verb"/></tag>  <!-- converted tense tag -->
									<tag><var n="v_pers_verb"/></tag>
									<tag><var n="v_nbr_verb"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="lem"/>
									<clip pos="1" side="tl" part="a_verb"/>
									<clip pos="1" side="tl" part="a_tense" link-to="2"/>
									<clip pos="1" side="tl" part="a_pers" link-to="3"/>
									<clip pos="1" side="tl" part="a_nbr" link-to="4"/>
								</lu>
								<b pos="1"/>
								<lu>
									<clip pos="2" side="tl" part="lemh"/>
									<clip pos="2" side="tl" part="a_verb"/>
									<clip pos="2" side="tl" part="a_tense"/>
									<clip pos="2" side="tl" part="lemq"/>
								</lu>
							</chunk>
						</out>
					</when>

					<otherwise>  <!-- "be" deletion -->
						<out>
							<chunk name="verb" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="SV"/></tag>
									<tag><var n="v_tense_verb"/></tag>  <!-- converted tense tag -->
									<tag><var n="v_pers_verb"/></tag>
									<tag><var n="v_nbr_verb"/></tag>
								</tags>
								<lu>
									<clip pos="2" side="tl" part="lemh"/>
									<clip pos="2" side="tl" part="a_verb"/>
									<clip pos="1" side="tl" part="a_tense" link-to="2"/>
									<clip pos="1" side="tl" part="a_pers" link-to="3"/>
									<clip pos="1" side="tl" part="a_nbr" link-to="4"/>
									<clip pos="2" side="tl" part="lemq"/>
								</lu>
							</chunk>
						</out>
					</otherwise>
				</choose>

				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: VERBS / VERBS+ATP">
			<pattern>
				<pattern-item n="verbnmh"/> <!-- any verb but modal or "have" -->
			</pattern>
			<action>
				<call-macro n="build_verb"> <!-- OUT: v...verb -->
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="set_chunk_tag_verb">
					<with-param pos="1"/>
				</call-macro>
				<let><var n="v_predicate"/><clip pos="1" side="tl" part="a_verb1"/></let>

				<let><var n="v_lemq_verb"/><clip pos="1" side="tl" part="lemq"/></let>
				<choose>
					<when>  <!-- attachable prefix was separated -->
						<test>
							<and>
								<not>
									<equal>
										<var n="v_lemq_verb"/>
										<lit v=""/>
									</equal>
								</not>
								<equal>
									<clip pos="1" side="tl" part="a_sep_verb1"/>
									<lit-tag v="vblex.sep"/>
								</equal>
							</and>
						</test>
						<call-macro n="rm_sep_a_verb">  <!-- remove <sep> tag from verb -->
							<with-param pos="1"/>
						</call-macro>
						<out>
							<chunk name="verb" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="SV"/></tag>
									<tag><var n="v_tense_verb"/></tag>
									<tag><var n="v_pers_verb"/></tag>
									<tag><var n="v_nbr_verb"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="lemh"/>
									<clip pos="1" side="tl" part="a_verb"/>
									<clip pos="1" side="tl" part="a_tense" link-to="2"/>
									<clip pos="1" side="tl" part="a_pers" link-to="3"/>
									<clip pos="1" side="tl" part="a_nbr" link-to="4"/>
								</lu>
							</chunk>
							<b pos="1"/>
							<chunk name="prep" case="caseOtherWord"> <!-- "lemq" -->
								<tags>
									<tag><lit-tag v="PR"/></tag>
									<tag><lit-tag v="atp"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="lemq"/> <!-- separable prefix  (<var n="v_lemq_verb"/>) -->
									<lit-tag v="atp"/>
								</lu>
							</chunk>
						</out>
					</when>

					<otherwise>
						<out>
							<chunk name="verb" case="caseFirstWord">
								<tags>
									<tag><var n="v_chunk_tag"/></tag>  <!-- "SV" / "SV_haver" -->
									<tag><var n="v_tense_verb"/></tag>
									<tag><var n="v_pers_verb"/></tag>
									<tag><var n="v_nbr_verb"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="lemh"/>
									<clip pos="1" side="tl" part="a_verb"/>
									<clip pos="1" side="tl" part="a_tense" link-to="2"/>
									<clip pos="1" side="tl" part="a_pers" link-to="3"/>
									<clip pos="1" side="tl" part="a_nbr" link-to="4"/>
									<clip pos="1" side="tl" part="lemq"/>
								</lu>
							</chunk>
						</out>
					</otherwise>
				</choose>

				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- verbs with "to" -->
		<rule comment="RULE: TO VERBS">
			<pattern>
				<pattern-item n="to"/>
				<pattern-item n="verbs"/>
			</pattern>
			<action>
				<let><clip pos="2" side="tl" part="a_tense"/><lit-tag v="inf"/></let>
				<call-macro n="build_verb2">
					<with-param pos="2"/>
				</call-macro>
				<let><var n="v_firstWord_qst"/><lit v=""/></let>
				<out>
					<chunk name="to_verb" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SV"/></tag>
							<tag><lit-tag v="inf"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_verb"/>
							<lit-tag v="inf"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: VERBM VERBS">
			<pattern>
				<pattern-item n="verbm"/>  <!-- vbmod/vaux -->
				<pattern-item n="verbs"/>
			</pattern>
			<action>
				<call-macro n="build_verb"> <!-- OUT: v...verb -->
					<with-param pos="1"/>
				</call-macro>
				<choose>
					<when>  <!-- verb with attachable prefix -->
						<test>
							<equal>
								<clip pos="2" side="tl" part="a_sep_verb1"/>
								<lit-tag v="vblex.sep"/>
							</equal>
						</test>
						<call-macro n="build_verb">
							<with-param pos="2"/>
						</call-macro>
						<out>
							<chunk name="verbm" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="SV_aux"/></tag>
									<tag><var n="v_tense_verb"/></tag>
									<tag><var n="v_pers_verb"/></tag>
									<tag><var n="v_nbr_verb"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="lem"/>
									<clip pos="1" side="tl" part="a_verb"/>
									<clip pos="1" side="tl" part="a_tense" link-to="2"/>
									<clip pos="1" side="tl" part="a_pers" link-to="3"/>
									<clip pos="1" side="tl" part="a_nbr" link-to="4"/>
								</lu>
							</chunk>
							<b pos="1"/>
							<chunk name="verb" case="caseOtherWord">
								<tags>
									<tag><lit-tag v="SV"/></tag>
									<tag><clip pos="2" side="tl" part="a_tense"/></tag>
									<tag><clip pos="2" side="tl" part="a_pers"/></tag>
									<tag><clip pos="2" side="tl" part="a_nbr"/></tag>
								</tags>
								<lu>
									<clip pos="2" side="tl" part="lemh"/>
									<clip pos="2" side="tl" part="a_verb"/>
									<clip pos="2" side="tl" part="a_tense" link-to="2"/>
									<clip pos="2" side="tl" part="a_pers" link-to="3"/>
									<clip pos="2" side="tl" part="a_nbr" link-to="4"/>
									<clip pos="2" side="tl" part="lemq"/>
								</lu>
							</chunk>
						</out>
					</when>

					<otherwise>  <!-- second verb is inf -->
						<let><clip pos="2" side="tl" part="a_tense"/><lit-tag v="inf"/></let>
						<call-macro n="build_verb2">
							<with-param pos="2"/>
						</call-macro>
						<out>
							<chunk name="verbm" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="SV_aux"/></tag>
									<tag><var n="v_tense_verb"/></tag>
									<tag><var n="v_pers_verb"/></tag>
									<tag><var n="v_nbr_verb"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="lem"/>
									<clip pos="1" side="tl" part="a_verb"/>
									<clip pos="1" side="tl" part="a_tense" link-to="2"/>
									<clip pos="1" side="tl" part="a_pers" link-to="3"/>
									<clip pos="1" side="tl" part="a_nbr" link-to="4"/>
								</lu>
							</chunk>
							<b pos="1"/>
							<chunk name="verb" case="caseOtherWord">
								<tags>
									<tag><lit-tag v="SV"/></tag>
									<tag><lit-tag v="inf"/></tag>
								</tags>
								<lu>
									<clip pos="2" side="tl" part="lemh"/>
									<clip pos="2" side="tl" part="a_verb"/>
									<lit-tag v="inf"/>
									<clip pos="2" side="tl" part="lemq"/>
								</lu>
							</chunk>
						</out>
					</otherwise>
				</choose>

				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: VERBM">
			<pattern>
				<pattern-item n="verbm"/>  <!-- vbmod/vaux -->
			</pattern>
			<action>
				<call-macro n="build_verb"> <!-- OUT: v...verb -->
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="set_chunk_tag_verb">
					<with-param pos="1"/>
				</call-macro>
				<out>
					<chunk name="verbm" case="caseFirstWord">
						<tags>
							<tag><var n="v_chunk_tag"/></tag>  <!-- SV/SV_aux/SV_haver -->
							<tag><var n="v_tense_verb"/></tag>  <!-- converted tense tag -->
							<tag><var n="v_pers_verb"/></tag>
							<tag><var n="v_nbr_verb"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_verb"/>
							<clip pos="1" side="tl" part="a_tense" link-to="2"/>
							<clip pos="1" side="tl" part="a_pers" link-to="3"/>
							<clip pos="1" side="tl" part="a_nbr" link-to="4"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "(we) do have" => "(wir) haben" -->
		<rule comment="RULE: VERBLEX VERBS">
			<pattern>
				<pattern-item n="verblex"/>
				<pattern-item n="verbs"/>
				<!--<pattern-item n="verbpp"/>-->
			</pattern>
			<action>
				<call-macro n="build_verb"> <!-- OUT: v...verb -->
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="rm_sep_a_verb">
					<with-param pos="2"/>
				</call-macro>
				<let><var n="v_predicate"/><clip pos="2" side="tl" part="a_verb1"/></let>

				<choose>
					<when>
						<test>
							<and>
								<equal caseless="yes">
									<clip pos="1" side="sl" part="lem"/>
									<lit v="do"/>
								</equal>
								<equal caseless="yes">
									<clip pos="2" side="sl" part="lem"/>
									<lit v="have"/>
								</equal>
							</and>
						</test>
						<out>
							<chunk name="verb" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="SV"/></tag>
									<tag><clip pos="1" side="tl" part="a_tense"/></tag>
									<tag><clip pos="1" side="tl" part="a_pers"/></tag>
									<tag><clip pos="1" side="tl" part="a_nbr"/></tag>
								</tags>
								<lu>
									<clip pos="2" side="tl" part="lemh"/>
									<clip pos="2" side="tl" part="tags"/>
									<clip pos="2" side="tl" part="lemq"/>
								</lu>
							</chunk>
						</out>
					</when>

					<otherwise>  <!-- <vblex> + <vblex> -->
						<out>
							<chunk name="verb_verb" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="SV"/></tag>
									<tag><clip pos="1" side="tl" part="a_tense"/></tag>
									<tag><clip pos="1" side="tl" part="a_pers"/></tag>
									<tag><clip pos="1" side="tl" part="a_nbr"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="lem"/>
									<clip pos="1" side="tl" part="a_verb"/>
									<clip pos="1" side="tl" part="a_tense"/>
									<clip pos="1" side="tl" part="a_pers"/>
									<clip pos="1" side="tl" part="a_nbr"/>
								</lu>
								<b pos="1"/>
								<lu>
									<clip pos="2" side="tl" part="lemh"/>
									<clip pos="2" side="tl" part="a_verb"/>
									<clip pos="2" side="tl" part="a_tense"/>
									<clip pos="2" side="tl" part="a_pers"/>
									<clip pos="2" side="tl" part="a_nbr"/>
									<clip pos="2" side="tl" part="lemq"/>
								</lu>
							</chunk>
						</out>
					</otherwise>
				</choose>

				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- (GB:) "Have you got (...?)" => "Hast du (...?)" -->
		<!-- (GB:) HAVE PRPERS -GOT => HAVE PRPERS -->
		<rule comment="RULE: HAVE PRPERS GOT">
			<pattern>
				<pattern-item n="verbhave"/>
				<pattern-item n="prpers_subj"/>
				<pattern-item n="got"/>
			</pattern>
			<action>
				<call-macro n="build_verb">  <!-- OUT: v_..._verb -->
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_prpers">  <!-- OUT: v_..._prn -->
					<with-param pos="2"/>
				</call-macro>
				<out>
					<chunk name="verb" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SV"/></tag>
							<tag><var n="v_tense_verb"/></tag>
							<tag><var n="v_pers_verb"/></tag>
							<tag><var n="v_nbr_verb"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_verb"/>
							<clip pos="1" side="tl" part="a_tense" link-to="2"/>
							<clip pos="1" side="tl" part="a_pers" link-to="3"/>
							<clip pos="1" side="tl" part="a_nbr" link-to="4"/>
						</lu>
					</chunk>
					<b pos="1"/>
					<chunk name="prpers" case="caseOtherWord">
						<tags>
							<tag><lit-tag v="PRPERS"/></tag>
							<tag><var n="v_pers_prn"/></tag>
							<tag><var n="v_gen_prn"/></tag>
							<tag><var n="v_nbr_prn"/></tag>
						</tags>
						<lu>
							<clip pos="2" side="tl" part="lem"/>
							<clip pos="2" side="tl" part="a_any_prn"/>
							<clip pos="2" side="tl" part="a_pers"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- (GB:) "have not got a ball" => "haben keinen Ball" -->
		<!-- (GB:) HAVE NOT GOT DET NOM => HAVE NO+DET NOM -->
		<rule comment="RULE: HAVE NOT GOT DET NOM">
			<pattern>
				<pattern-item n="verbhave"/>
				<pattern-item n="not"/>
				<pattern-item n="got"/>
				<pattern-item n="ind_det"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_verb">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_det_nom">
					<with-param pos="4"/>
					<with-param pos="5"/>
				</call-macro>
				<out>
					<chunk name="verb" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SV"/></tag>
							<tag><var n="v_tense_verb"/></tag>
							<tag><var n="v_pers_verb"/></tag>
							<tag><var n="v_nbr_verb"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_verb"/>
							<clip pos="1" side="tl" part="a_tense"/>
							<clip pos="1" side="tl" part="a_pers"/>
							<clip pos="1" side="tl" part="a_nbr"/>
						</lu>
					</chunk>
					<b pos="3"/>
					<chunk name="det_nom" case="caseOtherWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<lit v="kein"/>
							<clip pos="4" side="tl" part="a_det"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
						</lu>
						<b pos="4"/>
						<lu>
							<clip pos="5" side="tl" part="lemh"/>
							<clip pos="5" side="tl" part="a_nom"/>
							<clip pos="5" side="tl" part="a_gen"/>
							<clip pos="5" side="tl" part="a_nbr"/>
							<clip pos="5" side="tl" part="a_cas"/>
							<clip pos="5" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- (GB:) "have not got mumps" => "haben keinen Mumps" -->
		<!-- (GB:) HAVE NOT GOT NOM => HAVE NO NOM -->
		<rule comment="RULE: HAVE NOT GOT NOM">
			<pattern>
				<pattern-item n="verbhave"/>
				<pattern-item n="not"/>
				<pattern-item n="got"/>
				<pattern-item n="nom"/>
			</pattern>
			<action>
				<call-macro n="build_verb">
					<with-param pos="1"/>
				</call-macro>
				<call-macro n="build_nom">
					<with-param pos="4"/>
				</call-macro>
				<call-macro n="build3_det"> <!-- (IN: v...nom / OUT: v...det) -->
					<with-param pos="4"/>
				</call-macro>
				<out>
					<chunk name="verb" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SV"/></tag>
							<tag><var n="v_tense_verb"/></tag>
							<tag><var n="v_pers_verb"/></tag>
							<tag><var n="v_nbr_verb"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_verb"/>
							<clip pos="1" side="tl" part="a_tense"/>
							<clip pos="1" side="tl" part="a_pers"/>
							<clip pos="1" side="tl" part="a_nbr"/>
						</lu>
					</chunk>
					<b pos="2"/>
					<chunk name="det_nom" case="caseOtherWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<lit v="kein"/>
							<lit-tag v="det.ind"/>
							<var n="v_gen_det"/>
							<var n="v_nbr_det"/>
							<var n="v_cas_det"/>
							<!--<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>-->
						</lu>
						<b pos="3"/>
						<lu>
							<clip pos="4" side="tl" part="lemh"/>
							<clip pos="4" side="tl" part="a_nom"/>
							<clip pos="4" side="tl" part="a_gen"/>
							<clip pos="4" side="tl" part="a_nbr"/>
							<clip pos="4" side="tl" part="a_cas"/>
							<clip pos="4" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- (GB:) "haven't got" => "haben kein" -->
		<!-- (GB:) HAVE NOT GOT => HAVE NO -->
		<rule comment="RULE: HAVE NOT GOT">
			<pattern>
				<pattern-item n="verbhave"/>
				<pattern-item n="not"/>
				<pattern-item n="got"/>
			</pattern>
			<action>
				<call-macro n="build_verb">
					<with-param pos="1"/>
				</call-macro>
				<out>
					<chunk name="verb_adv" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SV"/></tag>
							<tag><var n="v_tense_verb"/></tag>
							<tag><var n="v_pers_verb"/></tag>
							<tag><var n="v_nbr_verb"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_verb"/>
							<clip pos="1" side="tl" part="a_tense"/>
							<clip pos="1" side="tl" part="a_pers"/>
							<clip pos="1" side="tl" part="a_nbr"/>
						</lu>
						<b pos="1"/>
						<lu>
							<lit v="kein"/>
							<lit-tag v="det.ind.nt.acc"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!--  (GB:) "has he got" => "hat er" -->
		<!--  (GB:) HAVE NOUNS GOT => HAVE NOUNS -->
		<rule comment="RULE: HAVE NOUNS GOT">
			<pattern>
				<pattern-item n="verbhave"/>
				<!--<pattern-item n="nouns"/>-->  <!-- prn/np/n -->
				<pattern-item n="noun"/>  <!-- "n"/"np" -->
				<pattern-item n="got"/>
			</pattern>
			<action>
				<call-macro n="build_nom">  <!--(exec first to get nbr)-->
					<with-param pos="2"/>
				</call-macro>
				<call-macro n="upd_inf_pri_tense"> <!-- if "inf" change to "pri" -->
					<with-param pos="1"/>
				</call-macro>
				<!--<call-macro n="build_verb">-->
				<call-macro n="set_tense_pers_nbr_verb">
					<with-param pos="1"/>
				</call-macro>
				<out>
					<chunk name="verb" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SV"/></tag>
							<tag><var n="v_tense_verb"/></tag>
							<tag><var n="v_pers_verb"/></tag>
							<tag><var n="v_nbr_verb"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_verb"/>
							<var n="v_tense_verb"/>
							<var n="v_pers_verb"/>
							<var n="v_nbr_verb"/>
						</lu>
					</chunk>
					<b pos="1"/>

					<chunk name="nom" case="caseOtherWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<clip pos="2" side="tl" part="a_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "had worked"    => "gearbeitet hatte" / "hatte ... gearbeitet" -->
		<!--("had travelled" => "gereist war" / "war ... gereist" -->
		<rule comment="RULE: HAVE VERBS">
			<pattern>
				<pattern-item n="verbhave"/>  <!-- vbhaver -->
				<pattern-item n="verbs"/>
			</pattern>
			<action>
				<choose>
					<when>
						<test>
							<equal>
								<clip pos="1" side="tl" part="a_tense"/>
								<lit-tag v="inf"/>
							</equal>
						</test>
						<let><clip pos="1" side="tl" part="a_tense"/><lit-tag v="pri"/></let>
					</when>
				</choose>
				<call-macro n="build_verb"> <!-- OUT: v...verb -->
					<with-param pos="1"/>
				</call-macro>
				<!--<let><clip pos="2" side="tl" part="a_tense"/><lit-tag v="pp"/></let>-->
				<call-macro n="build_verb2">
					<with-param pos="2"/>
				</call-macro>

				<choose>
					<when>  <!-- (GB:) have got => have -->
						<test>
							<and>
								<equal caseless="yes">
									<clip pos="1" side="sl" part="lem"/>
									<lit v="have"/>
								</equal>
								<equal caseless="yes">
									<clip pos="2" side="sl" part="lem"/>
									<lit v="got"/>
								</equal>
							</and>
						</test>
						<out>
							<chunk name="verb" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="SV"/></tag>
									<tag><clip pos="1" side="tl" part="a_tense"/></tag>
									<tag><clip pos="1" side="tl" part="a_pers"/></tag>
									<tag><clip pos="1" side="tl" part="a_nbr"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="whole"/>
								</lu>
							</chunk>
						</out>
					</when>

					<when>  <!-- change order -->
						<test>
							<or>
								<equal>
									<var n="v_firstWord_PoS"/>
									<lit-tag v="vblex"/>
								</equal>
								<equal>
									<var n="v_firstWord_PoS"/>
									<lit-tag v="adv"/>
								</equal>
							</or>
						</test>
						<modify-case>
							<clip pos="1" side="tl" part="lem"/>
							<lit v="aa"/>
						</modify-case>
						<out>
							<chunk name="verb_verb" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="SV"/></tag>
									<tag><var n="v_tense_verb"/></tag>
									<tag><var n="v_pers_verb"/></tag>
									<tag><var n="v_nbr_verb"/></tag>
								</tags>
								<lu>
									<clip pos="2" side="tl" part="lemh"/>
									<clip pos="2" side="tl" part="a_verb"/>
									<lit-tag v="pp"/>
									<clip pos="2" side="tl" part="lemq"/>
								</lu>
								<b pos="1"/>
								<lu>
									<clip pos="1" side="tl" part="lemh"/>
									<clip pos="1" side="tl" part="a_verb"/>
									<clip pos="1" side="tl" part="a_tense"/>
									<clip pos="1" side="tl" part="a_pers"/>
									<clip pos="1" side="tl" part="a_nbr"/>
									<clip pos="1" side="tl" part="lemq"/>
								</lu>
							</chunk>
						</out>
					</when>

					<otherwise>
						<out>
							<chunk name="verb_verb" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="SV"/></tag>
									<tag><var n="v_tense_verb"/></tag>
									<tag><var n="v_pers_verb"/></tag>
									<tag><var n="v_nbr_verb"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="lemh"/>
									<clip pos="1" side="tl" part="a_verb"/>
									<clip pos="1" side="tl" part="a_tense"/>
									<clip pos="1" side="tl" part="a_pers"/>
									<clip pos="1" side="tl" part="a_nbr"/>
									<clip pos="1" side="tl" part="lemq"/>
								</lu>
								<b pos="1"/>
								<lu>
									<clip pos="2" side="tl" part="lemh"/>
									<clip pos="2" side="tl" part="a_verb"/>
									<lit-tag v="pp"/>
									<clip pos="2" side="tl" part="lemq"/>
								</lu>
							</chunk>
						</out>
					</otherwise>
				</choose>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: HAVE">
			<pattern>
				<pattern-item n="verbhave"/>
			</pattern>
			<action>
				<choose>
					<when>  <!-- (GB:) have got => have -->
						<test>
							<equal caseless="yes">
								<clip pos="1" side="sl" part="lem"/>
								<lit v="have# got"/>
							</equal>
						</test>
						<call-macro n="upd_inf_pres_tense"> <!-- if "inf" change to "pri" -->
							<with-param pos="1"/>
						</call-macro>
						<call-macro n="build_verb"> <!-- OUT: v...verb -->
							<with-param pos="1"/>
						</call-macro>
						<out>
							<chunk name="verb" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="SV"/></tag>
									<tag><var n="v_tense_verb"/></tag>
									<tag><var n="v_pers_verb"/></tag>
									<tag><var n="v_nbr_verb"/></tag>
								</tags>
								<lu>
									<lit v="haben"/>
									<lit-tag v="vbhaver"/>
									<var n="v_tense_verb"/>
									<clip pos="1" side="tl" part="a_pers"/>
									<clip pos="1" side="tl" part="a_nbr"/>
								</lu>
							</chunk>
						</out>
					</when>
					<when>  <!-- (GB:) have got => have (don't use lemq!)-->
						<test>
							<equal caseless="yes">
								<clip pos="1" side="sl" part="lem"/>
								<lit v="have got"/>
							</equal>
						</test>
						<call-macro n="build_verb"> <!-- OUT: v...verb -->
							<with-param pos="1"/>
						</call-macro>
						<out>
							<chunk name="verb" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="SV"/></tag>
									<tag><var n="v_tense_verb"/></tag>
									<tag><var n="v_pers_verb"/></tag>
									<tag><var n="v_nbr_verb"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="lem"/>
									<lit-tag v="vbhaver"/>
									<var n="v_tense_verb"/>
									<clip pos="1" side="tl" part="a_pers"/>
									<clip pos="1" side="tl" part="a_nbr"/>
								</lu>
							</chunk>
						</out>
					</when>

					<otherwise>
						<call-macro n="build_verb"> <!-- OUT: v...verb -->
							<with-param pos="1"/>
						</call-macro>
						<out>
							<chunk name="verb" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="SV"/></tag>
									<tag><var n="v_tense_verb"/></tag>
									<tag><var n="v_pers_verb"/></tag>
									<tag><var n="v_nbr_verb"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="lemh"/>
									<clip pos="1" side="tl" part="a_verb"/>
									<clip pos="1" side="tl" part="a_tense" link-to="2"/>
									<clip pos="1" side="tl" part="a_pers" link-to="3"/>
									<clip pos="1" side="tl" part="a_nbr" link-to="4"/>
									<clip pos="1" side="tl" part="lemq"/>
								</lu>
							</chunk>
						</out>
					</otherwise>
				</choose>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "do you know" => "kennst du" -->
		<!-- DO N ~V => ~V N -->
		<rule comment="RULE: DO NOUNS VERBNM">
			<pattern>
				<pattern-item n="verbdo"/>
				<pattern-item n="nouns"/>  <!--"prpers"/"np"/"n"-->
				<pattern-item n="verbnm"/>
			</pattern>
			<action>
				<call-macro n="build_nom_verb">  <!-- OUT: v...nom / v...verb -->
					<with-param pos="2"/>
					<with-param pos="1"/>  <!-- temp/pers/nbr from first verb -->
				</call-macro>
				<out>
					<chunk name="verb" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SV"/></tag>
							<tag><var n="v_tense_verb"/></tag>
							<tag><var n="v_pers_verb"/></tag>
							<tag><var n="v_nbr_verb"/></tag>
						</tags>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_verb"/>
							<clip pos="1" side="tl" part="a_tense"/>  <!-- temp/pers/nbr from first verb -->
							<clip pos="1" side="tl" part="a_pers"/>
							<clip pos="1" side="tl" part="a_nbr"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
					</chunk>
					<b pos="1"/>
					<chunk name="nom" case="caseOtherWord">
						<tags>
							<tag><lit-tag v="SN"/></tag>
							<tag><var n="v_pers_nom"/></tag>
							<tag><var n="v_gen_nom"/></tag>
							<tag><var n="v_nbr_nom"/></tag>
							<tag><var n="v_cas_nom"/></tag>
						</tags>
						<lu>
							<clip pos="2" side="tl" part="lemh"/>
							<var n="v_a_nom"/>    <!-- prn/np/n -->
							<var n="v_pers_nom"/>
							<clip pos="2" side="tl" part="a_gen"/>
							<clip pos="2" side="tl" part="a_nbr"/>
							<clip pos="2" side="tl" part="a_cas"/>
							<clip pos="2" side="tl" part="lemq"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "(I) don't go" => "(ich) gehe nicht" -->
		<!-- DO ADV ~V => ~V ADV -->
		<rule comment="RULE: DO ADV VERBNM">
			<pattern>
				<pattern-item n="verbdo"/>
				<pattern-item n="adv"/>
				<pattern-item n="verbnm"/>
			</pattern>
			<action>
				<call-macro n="build_verb"> <!-- OUT: v...verb -->
					<with-param pos="1"/>
				</call-macro>
				<let><var n="v_predicate"/><clip pos="3" side="tl" part="a_verb1"/></let>
				<call-macro n="build_verb2">
					<with-param pos="3"/>
				</call-macro>
				<out>
					<chunk name="verb_adv" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SV"/></tag>
							<tag><var n="v_tense_verb"/></tag>
							<tag><var n="v_pers_verb"/></tag>
							<tag><var n="v_nbr_verb"/></tag>
						</tags>
						<lu>
							<clip pos="3" side="tl" part="lemh"/>
							<clip pos="3" side="tl" part="a_verb"/>
							<clip pos="1" side="tl" part="a_tense" link-to="2"/>  <!-- from first verb -->
							<clip pos="1" side="tl" part="a_pers" link-to="3"/>
							<clip pos="1" side="tl" part="a_nbr" link-to="4"/>
							<clip pos="3" side="tl" part="lemq"/>
						</lu>
						<b/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "(I) can not buy a (...)" => "(ich) kann kein (...) kaufen" -->
		<rule comment="RULE: VERBM ADV VERBNM DET">
			<pattern>
				<pattern-item n="verbm"/>
				<pattern-item n="adv"/>
				<pattern-item n="verbnm"/>
				<pattern-item n="ind_det_a"/>
			</pattern>
			<action>
				<call-macro n="build_verb"> <!-- OUT: v...verb -->
					<with-param pos="1"/>
				</call-macro>
				<let><clip pos="3" side="tl" part="a_tense"/><lit-tag v="inf"/></let>
				<call-macro n="build_verb2">
					<with-param pos="3"/>
				</call-macro>
				<let><var n="v_predicate"/><clip pos="3" side="tl" part="a_verb1"/></let>
				<out>
					<chunk name="verbm" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SV_aux"/></tag>
							<tag><var n="v_tense_verb"/></tag>
							<tag><var n="v_pers_verb"/></tag>
							<tag><var n="v_nbr_verb"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_verb"/>
							<clip pos="1" side="tl" part="a_tense"/>
							<clip pos="1" side="tl" part="a_pers"/>
							<clip pos="1" side="tl" part="a_nbr"/>
						</lu>
					</chunk>
					<b pos="1"/>
					<chunk name="verb" case="caseOtherWord">
						<tags>
							<tag><lit-tag v="SV"/></tag>
							<tag><lit-tag v="inf"/></tag>
						</tags>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_verb"/>
							<lit-tag v="inf"/>
						</lu>
					</chunk>
					<b pos="2"/>
					<chunk name="det-ind" case="caseOtherWord">
						<tags>
							<tag><lit-tag v="DET"/></tag>
							<tag><lit-tag v="p3"/></tag>
							<tag><lit-tag v="GD"/></tag>
							<tag><lit-tag v="ND"/></tag>
							<tag><lit-tag v="CD"/></tag>
						</tags>
						<lu>
							<lit v="kein"/>
							<clip pos="4" side="tl" part="a_det"/>
							<lit-tag v="3"/>  <!--"a_gen" / link-to="3"-->
							<lit-tag v="4"/>  <!--"a_nbr" / link-to="4"-->
							<lit-tag v="5"/>  <!--"a_cas" / link-to="5"-->
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- "(I) can not go" => "(ich) kann nicht gehen" -->
		<rule comment="RULE: VERBM ADV VERBNM">
			<pattern>
				<pattern-item n="verbm"/>
				<pattern-item n="adv"/>
				<pattern-item n="verbnm"/>
			</pattern>
			<action>
				<call-macro n="build_verb"> <!-- OUT: v...verb -->
					<with-param pos="1"/>
				</call-macro>
				<let><clip pos="3" side="tl" part="a_tense"/><lit-tag v="inf"/></let>
				<call-macro n="build_verb2">
					<with-param pos="3"/>
				</call-macro>
				<let><var n="v_predicate"/><clip pos="3" side="tl" part="a_verb1"/></let>
				<out>
					<chunk name="verb_adv" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="SV_adv"/></tag>
							<tag><var n="v_tense_verb"/></tag>
							<tag><var n="v_pers_verb"/></tag>
							<tag><var n="v_nbr_verb"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="lem"/>
							<clip pos="1" side="tl" part="a_verb"/>
							<clip pos="1" side="tl" part="a_tense"/>
							<clip pos="1" side="tl" part="a_pers"/>
							<clip pos="1" side="tl" part="a_nbr"/>
						</lu>
						<b pos="1"/>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
					</chunk>
					<b pos="2"/>

					<chunk name="verb" case="caseOtherWord">
						<tags>
							<tag><lit-tag v="SV"/></tag>
							<tag><lit-tag v="inf"/></tag>
						</tags>
						<lu>
							<clip pos="3" side="tl" part="lem"/>
							<clip pos="3" side="tl" part="a_verb"/>
							<lit-tag v="inf"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: ADV">
			<pattern>
				<pattern-item n="adv2"/>  <!-- adv/preadv/cnjadv -->
			</pattern>
			<action>
				<choose>
					<when>
						<test>
							<or>
								<in caseless="yes">
									<clip pos="1" side="sl" part="lem"/>
									<list n="l_on_weekdays"/>
								</in>
								<in caseless="yes">
									<clip pos="1" side="sl" part="lem"/>
									<list n="l_weekdays"/>
								</in>
								<in caseless="yes">
									<clip pos="1" side="sl" part="lem"/>
									<list n="l_days"/>
								</in>
							</or>
						</test>
						<out>
							<chunk name="adv" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="ADV"/></tag>
									<tag><lit-tag v="TIME"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="whole"/>
								</lu>
							</chunk>
						</out>
					</when>
					<otherwise>
						<out>
							<chunk name="adv" case="caseFirstWord">
								<tags>
									<tag><lit-tag v="ADV"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="whole"/>
								</lu>
							</chunk>
						</out>
					</otherwise>
				</choose>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: CONJ">
			<pattern>
				<pattern-item n="conj"/>
			</pattern>
			<action>
				<out>
					<chunk name="conj" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="CNJ"/></tag>
							<tag><clip pos="1" side="tl" part="a_cnj"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<rule comment="RULE: IJ">
			<pattern>
				<pattern-item n="ij"/>
			</pattern>
			<action>
				<out>
					<chunk name="ij" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="IJ"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- (build chunk) ", too ." -->
		<rule comment="RULE: CM ADV">
			<pattern>
				<pattern-item n="coma"/>  <!-- remove coma -->
				<pattern-item n="too"/>
			</pattern>
			<action>
				<out>
					<chunk name="coma_adv" case="caseFirstWord">
						<tags>
							<tag><lit-tag v="CM_ADV"/></tag>
						</tags>
						<lu>
							<clip pos="2" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
				<call-macro n="firstWord">
					<with-param pos="1"/>
				</call-macro>
			</action>
		</rule>


		<!-- coma -->
		<rule comment="RULE: CM">
			<pattern>
				<pattern-item n="coma"/>
			</pattern>
			<action>
				<let><var n="v_predicate"/><lit v=""/></let>  <!-- reset variable -->
				<out>
					<chunk name="coma">
						<tags>
							<tag><lit-tag v="CM"/></tag>
						</tags>
						<lu>
							<clip pos="1" side="tl" part="whole"/>
						</lu>
					</chunk>
				</out>
			</action>
		</rule>


		<!-- end of sentence / reset variables -->
		<rule comment="RULE: SENT">
			<pattern>
				<pattern-item n="sent"/>
			</pattern> 
			<action>
				<call-macro n="reset_variables">
				</call-macro>
				<let>
					<var n="EOS"/>
					<lit v="true"/>
				</let>
				<let>
					<var n="caseFirstWord"/>
					<lit v="Aa"/>
				</let>
				<choose>
					<when>
						<test>
							<equal>
								<clip pos="1" side="tl" part="lem"/>
								<lit v="?"/>
							</equal>
						</test>
						<out>
							<chunk name="punt">
								<tags>  <!-- question mark -->
									<tag><lit-tag v="QST"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="whole"/>
								</lu>
							</chunk>
						</out>
					</when>
					<otherwise>
						<out>
							<chunk name="punt">
								<tags>
									<tag><lit-tag v="sent"/></tag>
								</tags>
								<lu>
									<clip pos="1" side="tl" part="whole"/>
								</lu>
							</chunk>
						</out>
					</otherwise>
				</choose>
			</action>
		</rule>


	</section-rules>

</transfer>
